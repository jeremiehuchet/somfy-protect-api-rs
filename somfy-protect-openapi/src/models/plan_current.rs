/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlanCurrent {
    /// Code.
    #[serde(rename = "code")]
    pub code: String,
    /// Name.
    #[serde(rename = "name")]
    pub name: String,
    /// Sub Name.
    #[serde(rename = "subName", skip_serializing_if = "Option::is_none")]
    pub sub_name: Option<String>,
    /// Status.
    #[serde(rename = "status")]
    pub status: String,
    /// End term.
    #[serde(rename = "end_term", skip_serializing_if = "Option::is_none")]
    pub end_term: Option<String>,
    /// ISO-4217 Currency.
    #[serde(rename = "currency")]
    pub currency: String,
    /// Tax included.
    #[serde(rename = "tax_included")]
    pub tax_included: bool,
    /// Period.
    #[serde(rename = "period")]
    pub period: String,
    /// Price.
    #[serde(rename = "price")]
    pub price: i32,
    #[serde(rename = "cvr_status")]
    pub cvr_status: Box<models::PlanCvrStatus>,
    #[serde(rename = "emergency_status")]
    pub emergency_status: Box<models::PlanEmergencyStatus>,
    #[serde(
        rename = "emergency_network_status",
        skip_serializing_if = "Option::is_none"
    )]
    pub emergency_network_status: Option<Box<models::PlanEmergencyNetworkStatus>>,
    #[serde(rename = "pro_monitoring_status")]
    pub pro_monitoring_status: Box<models::PlanProMonitoringStatus>,
    #[serde(rename = "gsm_backup_status", skip_serializing_if = "Option::is_none")]
    pub gsm_backup_status: Option<Box<models::PlanGsmNetworkStatus>>,
    #[serde(rename = "card_last_4", skip_serializing_if = "Option::is_none")]
    pub card_last_4: Option<String>,
    #[serde(rename = "card_expires_at", skip_serializing_if = "Option::is_none")]
    pub card_expires_at: Option<String>,
}

impl PlanCurrent {
    pub fn new(
        code: String,
        name: String,
        status: String,
        currency: String,
        tax_included: bool,
        period: String,
        price: i32,
        cvr_status: models::PlanCvrStatus,
        emergency_status: models::PlanEmergencyStatus,
        pro_monitoring_status: models::PlanProMonitoringStatus,
    ) -> PlanCurrent {
        PlanCurrent {
            code,
            name,
            sub_name: None,
            status,
            end_term: None,
            currency,
            tax_included,
            period,
            price,
            cvr_status: Box::new(cvr_status),
            emergency_status: Box::new(emergency_status),
            emergency_network_status: None,
            pro_monitoring_status: Box::new(pro_monitoring_status),
            gsm_backup_status: None,
            card_last_4: None,
            card_expires_at: None,
        }
    }
}
