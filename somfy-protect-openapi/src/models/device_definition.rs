/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DeviceDefinition {
    /// The device definition unique identifier
    #[serde(
        rename = "device_definition_id",
        skip_serializing_if = "Option::is_none"
    )]
    pub device_definition_id: Option<DeviceDefinitionId>,
    /// The device label
    #[serde(rename = "label")]
    pub label: String,
    /// The device type
    #[serde(rename = "type")]
    pub r#type: RHashType,
}

impl DeviceDefinition {
    pub fn new(label: String, r#type: RHashType) -> DeviceDefinition {
        DeviceDefinition {
            device_definition_id: None,
            label,
            r#type,
        }
    }
}

/// The device definition unique identifier
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeviceDefinitionId {
    #[serde(rename = "mss_camera")]
    MssCamera,
    #[serde(rename = "mss_plug")]
    MssPlug,
    #[serde(rename = "mss_remote")]
    MssRemote,
    #[serde(rename = "mss_siren")]
    MssSiren,
    #[serde(rename = "mss_outdoor_siren")]
    MssOutdoorSiren,
    #[serde(rename = "mss_tag")]
    MssTag,
    #[serde(rename = "mss_camera_myfox_1")]
    MssCameraMyfox1,
    #[serde(rename = "mss_aio_1_plus")]
    MssAio1Plus,
    #[serde(rename = "mss_aio_1")]
    MssAio1,
    #[serde(rename = "mss_pir")]
    MssPir,
    #[serde(rename = "mss_extender")]
    MssExtender,
    #[serde(rename = "sp_indoor_cam1")]
    SpIndoorCam1,
    #[serde(rename = "sp_keypad")]
    SpKeypad,
    #[serde(rename = "sp_smoke_detector")]
    SpSmokeDetector,
    #[serde(rename = "sp_outdoor_cam1")]
    SpOutdoorCam1,
    #[serde(rename = "RTSRemote")]
    RtsRemote,
    #[serde(rename = "LinkPremium")]
    LinkPremium,
    #[serde(rename = "IoWindowCovering")]
    IoWindowCovering,
}

impl Default for DeviceDefinitionId {
    fn default() -> DeviceDefinitionId {
        Self::MssCamera
    }
}
/// The device type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "box")]
    Box,
    #[serde(rename = "camera")]
    Camera,
    #[serde(rename = "remote")]
    Remote,
    #[serde(rename = "siren")]
    Siren,
    #[serde(rename = "tag")]
    Tag,
    #[serde(rename = "keypad")]
    Keypad,
    #[serde(rename = "pir")]
    Pir,
    #[serde(rename = "extender")]
    Extender,
    #[serde(rename = "sp_risk_detector")]
    SpRiskDetector,
    #[serde(rename = "outdoor_camera")]
    OutdoorCamera,
    #[serde(rename = "indoor_camera")]
    IndoorCamera,
    #[serde(rename = "rts_remote")]
    RtsRemote,
    #[serde(rename = "ioWindowCovering")]
    IoWindowCovering,
    #[serde(rename = "allinone")]
    Allinone,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Allinone
    }
}
