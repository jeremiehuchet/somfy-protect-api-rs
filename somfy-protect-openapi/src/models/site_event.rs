/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SiteEvent {
    /// Event ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Event time.
    #[serde(rename = "occurred_at")]
    pub occurred_at: String,
    /// Event type.
    #[serde(rename = "message_type")]
    pub message_type: MessageType,
    /// Translation key.
    #[serde(rename = "message_key")]
    pub message_key: String,
    /// Translation vars.
    #[serde(rename = "message_vars")]
    pub message_vars: Vec<String>,
    #[serde(rename = "origin", skip_serializing_if = "Option::is_none")]
    pub origin: Option<Box<crate::models::SiteEventOrigin>>,
    /// Event medium.
    #[serde(rename = "medium", skip_serializing_if = "Option::is_none")]
    pub medium: Option<String>,
}

impl SiteEvent {
    pub fn new(occurred_at: String, message_type: MessageType, message_key: String, message_vars: Vec<String>) -> SiteEvent {
        SiteEvent {
            id: None,
            occurred_at,
            message_type,
            message_key,
            message_vars,
            origin: None,
            medium: None,
        }
    }
}

/// Event type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MessageType {
    #[serde(rename = "securityLevel")]
    SecurityLevel,
    #[serde(rename = "securityAlarm")]
    SecurityAlarm,
    #[serde(rename = "install")]
    Install,
    #[serde(rename = "uninstall")]
    Uninstall,
    #[serde(rename = "deviceConfiguration")]
    DeviceConfiguration,
    #[serde(rename = "userManagement")]
    UserManagement,
}

impl Default for MessageType {
    fn default() -> MessageType {
        Self::SecurityLevel
    }
}

