/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Plan {
    /// Code.
    #[serde(rename = "code")]
    pub code: String,
    /// Name.
    #[serde(rename = "name")]
    pub name: String,
    /// Sub Name.
    #[serde(rename = "subName", skip_serializing_if = "Option::is_none")]
    pub sub_name: Option<String>,
    /// Description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// ISO-4217 Currency.
    #[serde(rename = "currency")]
    pub currency: String,
    /// Tax included.
    #[serde(rename = "tax_included")]
    pub tax_included: bool,
    /// List of prices.
    #[serde(rename = "prices")]
    pub prices: Vec<models::PlanPrice>,
    /// Display CVR.
    #[serde(rename = "display_cvr")]
    pub display_cvr: bool,
    /// Display EmergencyNetwork.
    #[serde(
        rename = "display_emergency_network",
        skip_serializing_if = "Option::is_none"
    )]
    pub display_emergency_network: Option<bool>,
    /// Display GsmNetwork.
    #[serde(
        rename = "display_gsm_network",
        skip_serializing_if = "Option::is_none"
    )]
    pub display_gsm_network: Option<bool>,
    /// Comment.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Features.
    #[serde(rename = "features")]
    pub features: Vec<models::PlanFeature>,
    /// CVR Options.
    #[serde(rename = "cvr_options")]
    pub cvr_options: Vec<models::PlanCvrOption>,
    /// Button type.
    #[serde(rename = "button_type")]
    pub button_type: String,
    /// Button URL.
    #[serde(rename = "button_url", skip_serializing_if = "Option::is_none")]
    pub button_url: Option<String>,
    /// More URL.
    #[serde(rename = "more_url", skip_serializing_if = "Option::is_none")]
    pub more_url: Option<String>,
    #[serde(rename = "popup", skip_serializing_if = "Option::is_none")]
    pub popup: Option<Box<models::PlanPopup>>,
}

impl Plan {
    pub fn new(
        code: String,
        name: String,
        currency: String,
        tax_included: bool,
        prices: Vec<models::PlanPrice>,
        display_cvr: bool,
        features: Vec<models::PlanFeature>,
        cvr_options: Vec<models::PlanCvrOption>,
        button_type: String,
    ) -> Plan {
        Plan {
            code,
            name,
            sub_name: None,
            description: None,
            currency,
            tax_included,
            prices,
            display_cvr,
            display_emergency_network: None,
            display_gsm_network: None,
            comment: None,
            features,
            cvr_options,
            button_type,
            button_url: None,
            more_url: None,
            popup: None,
        }
    }
}
