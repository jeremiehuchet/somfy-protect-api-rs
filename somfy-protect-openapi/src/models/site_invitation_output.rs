/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SiteInvitationOutput {
    /// Identifier of user who sent invitation.
    #[serde(rename = "invited_by")]
    pub invited_by: String,
    /// Username of user who sent invitation.
    #[serde(
        rename = "invited_by_displayname",
        skip_serializing_if = "Option::is_none"
    )]
    pub invited_by_displayname: Option<String>,
    /// Invitation status.
    #[serde(rename = "invitation_status")]
    pub invitation_status: InvitationStatus,
}

impl SiteInvitationOutput {
    pub fn new(invited_by: String, invitation_status: InvitationStatus) -> SiteInvitationOutput {
        SiteInvitationOutput {
            invited_by,
            invited_by_displayname: None,
            invitation_status,
        }
    }
}
/// Invitation status.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InvitationStatus {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "accepted")]
    Accepted,
    #[serde(rename = "refused")]
    Refused,
    #[serde(rename = "not_required")]
    NotRequired,
}

impl Default for InvitationStatus {
    fn default() -> InvitationStatus {
        Self::Pending
    }
}
