/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeviceOutputMinimal {
    /// The device identifier.
    #[serde(rename = "device_id")]
    pub device_id: String,
    /// The device label.
    #[serde(rename = "label")]
    pub label: String,
    /// The device definition identifier.
    #[serde(rename = "device_definition_id")]
    pub device_definition_id: DeviceDefinitionId,
}

impl DeviceOutputMinimal {
    pub fn new(
        device_id: String,
        label: String,
        device_definition_id: DeviceDefinitionId,
    ) -> DeviceOutputMinimal {
        DeviceOutputMinimal {
            device_id,
            label,
            device_definition_id,
        }
    }
}
/// The device definition identifier.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeviceDefinitionId {
    #[serde(rename = "mss_camera")]
    Camera,
    #[serde(rename = "mss_plug")]
    Plug,
    #[serde(rename = "mss_remote")]
    Remote,
    #[serde(rename = "mss_siren")]
    Siren,
    #[serde(rename = "mss_tag")]
    Tag,
}

impl Default for DeviceDefinitionId {
    fn default() -> DeviceDefinitionId {
        Self::Camera
    }
}
