/*
 * Somfy Protect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Service {
    /// Type of service.
    #[serde(rename = "type")]
    pub r#type: RHashType,
    /// List of Devices concerned by this service.
    #[serde(rename = "devices", skip_serializing_if = "Option::is_none")]
    pub devices: Option<Vec<crate::models::ServiceDevice>>,
    /// Start date of service.
    #[serde(rename = "started_at")]
    pub started_at: String,
    /// End date of service.
    #[serde(rename = "end_at", skip_serializing_if = "Option::is_none")]
    pub end_at: Option<String>,
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<Box<crate::models::ServicePeriod>>,
    /// Date for next payment.
    #[serde(rename = "next_payment_at", skip_serializing_if = "Option::is_none")]
    pub next_payment_at: Option<String>,
}

impl Service {
    pub fn new(r#type: RHashType, started_at: String) -> Service {
        Service {
            r#type,
            devices: None,
            started_at,
            end_at: None,
            period: None,
            next_payment_at: None,
        }
    }
}

/// Type of service.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "trial")]
    Trial,
    #[serde(rename = "cvr-1")]
    Cvr1,
    #[serde(rename = "cvr-7")]
    Cvr7,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Trial
    }
}

