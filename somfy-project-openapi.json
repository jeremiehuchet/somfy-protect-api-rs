{
  "swagger": "2.0",
  "info": {
    "title": "Somfy Protect API",
    "version": "3"
  },
  "basePath": "/v3",
  "paths": {
    "/site/{site_id}/device/{device_id}/access/answer_call": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Ask WebRTC Answer Call",
        "operationId": "answerCall",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "session_id",
            "in": "body",
            "description": "WebRTC Session identifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebRTCSessionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job payload",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "400": {
            "description": "Device not compatible",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "404": {
            "description": "Device not found",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/calibration": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Start calibration of a device",
        "description": "Start calibration of a device (only for IntelliTAG)",
        "operationId": "deviceCalibrationStart",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/calibration/stop": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Stop calibration of a device",
        "description": "Stop calibration of a device (only for IntelliTAG)",
        "operationId": "deviceCalibrationStop",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device-install/{model}": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Start installation of a device",
        "operationId": "deviceInstallationStart",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "path",
            "description": "Model of device",
            "required": true,
            "type": "string",
            "enum": [
              "mss_plug",
              "mss_siren",
              "mss_tag",
              "mss_remote",
              "mss_pir",
              "mss_extender",
              "mss_outdoor_siren"
            ]
          },
          {
            "name": "install_options",
            "in": "body",
            "description": "Options for installing the device",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InstallOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "(1) - Box already installed (message = error.install.box.already_in_use) <br><br>\n    (10) - Install duration is too big (message = error.install_duration.too_big)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "device"
        ],
        "summary": "Stop installation of a device",
        "operationId": "deviceInstallationStop",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "path",
            "description": "Model of device",
            "required": true,
            "type": "string",
            "enum": [
              "mss_plug",
              "mss_siren",
              "mss_tag",
              "mss_remote",
              "mss_pir",
              "mss_outdoor_siren"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device-install-homekit/{model}": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Start installation of a device",
        "operationId": "deviceInstallationStart",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "path",
            "description": "Model of device",
            "required": true,
            "type": "string",
            "enum": [
              "mss_plug",
              "mss_siren",
              "mss_tag",
              "mss_remote",
              "mss_pir",
              "mss_extender",
              "mss_outdoor_siren"
            ]
          },
          {
            "name": "install_options",
            "in": "body",
            "description": "Options for installing the device",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InstallOptionsHomeKit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "(1) - Box already installed (message = error.install.box.already_in_use)<br><br>\n     (10) - Install duration is too big (message = error.install_duration.too_big)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device-install/{model}/extend": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Extend installation duration of a device",
        "operationId": "deviceInstallationExtend",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "path",
            "description": "Model of device",
            "required": true,
            "type": "string",
            "enum": [
              "mss_plug",
              "mss_siren",
              "mss_tag",
              "mss_remote",
              "mss_pir",
              "mss_outdoor_siren"
            ]
          },
          {
            "name": "extend_options",
            "in": "body",
            "description": "Options for extending installation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtendOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "(1) - Device model is missing or unknown (message = error.device_definition_id_missing)<br><br>\n     (4) - Install duration is too big (message = error.install_duration.too_big)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/reset": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Build an encrypted reset payload for the mobile app",
        "operationId": "deviceReset",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "wifi_credentials",
            "in": "body",
            "description": "Wifi SSID and password",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WifiCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Encrypted payload",
            "schema": {
              "$ref": "#/definitions/Reset"
            }
          },
          "400": {
            "description": "Device not compatible",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "404": {
            "description": "Device not found",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/reset_wifi": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Reset wifi for a video device",
        "operationId": "deviceResetWifi",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Job payload",
            "schema": {
              "$ref": "#/definitions/Reset"
            }
          },
          "400": {
            "description": "Device not compatible",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "404": {
            "description": "Device not found",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/uninstall": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Uninstall a device previously installed on this site",
        "operationId": "deviceUninstallStart",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "401": {
            "description": "Device is currently in a subscription service"
          },
          "404": {
            "description": "Site restoration is running (message = error.site.restoration.running)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "device"
        ],
        "summary": "Stop uninstall process of a device",
        "operationId": "deviceUninstallStop",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device-compatible": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Get list of devices compatible for installation on site",
        "operationId": "getCompatibleDevices",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceCompatibilityCollection"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Get list of installed devices on site",
        "operationId": "getInstalledDevices",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceCollection"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Get details of a device",
        "operationId": "deviceGetDetails",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceOutput"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "device"
        ],
        "summary": "Set details of a device",
        "operationId": "deviceSetDetails",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_details",
            "in": "body",
            "description": "Device details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/action": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Run an action on a device",
        "operationId": "deviceAction",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier or 'all'",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_details",
            "in": "body",
            "description": "Device action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/JobCollection"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/sound/{sound_ref}": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Play a sound on a device",
        "operationId": "deviceSound",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "sound_ref",
            "in": "path",
            "description": "Sound to play",
            "required": true,
            "type": "string",
            "enum": [
              "armed",
              "disarmed",
              "intrusion",
              "ok",
              "siren1s"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "Unknown or missing sound_ref (message = error.parameter.missing)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/update": {
      "get": {
        "tags": [
          "site"
        ],
        "summary": "List of mandatory updates",
        "operationId": "deviceUpdatesGet",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "hkp.full"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Ask firmware update for a device",
        "operationId": "deviceUpdateFirmware",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "path",
            "description": "Device identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "409": {
            "description": "Update not available (message = error.update.notAvailable)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/diagnosis": {
      "post": {
        "tags": [
          "diagnosis"
        ],
        "summary": "Start the global testing of all devices for a site",
        "operationId": "globalTestingDiagnosis",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "Site no disarmed (message = error.site.notDisarmed)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/diagnosis/extend": {
      "post": {
        "tags": [
          "diagnosis"
        ],
        "summary": "Extends the global testing of all devices for a site",
        "operationId": "globalTestingDiagnosisExtend",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "Site no disarmed (message = error.site.notDisarmed)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/diagnosis/stop": {
      "post": {
        "tags": [
          "diagnosis"
        ],
        "summary": "Stops the global testing of all devices for a site",
        "operationId": "globalTestingDiagnosisStop",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "Site no disarmed (message = error.site.notDisarmed)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/lorawan/test": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "LoRawan device trame test",
        "operationId": "getSiteLorawanDeviceTest",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "(1) - No lorawan service on this plan (message = error.plan.option.unavailable)<br><br>\n     * (2) - Master device not compatible (message = error.lorawan.device.compatibility)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/backup-gsm/test": {
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Backup GSM device test",
        "operationId": "gsmBackupSmsTest",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/device/{device_id}/homekit/qrcode": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "List of mandatory updates",
        "operationId": "deviceUpdatesGet",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/dictionary/{dictionary_id}/{locale}": {
      "get": {
        "tags": [
          "misc"
        ],
        "summary": "Get a dictionary file for translations",
        "operationId": "getDictionary",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "description": "Dictionary identifier",
            "required": true,
            "type": "string",
            "enum": [
              "app",
              "error",
              "public"
            ]
          },
          {
            "name": "locale",
            "in": "path",
            "description": "Dictionary locale",
            "required": true,
            "type": "string",
            "enum": [
              "en_US",
              "fr_FR",
              "de_DE",
              "es_ES",
              "it_IT",
              "nl_NL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The dictionary content"
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "misc"
        ],
        "summary": "Get cloud version and enabled features",
        "operationId": "getCloudInfo",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/job/{job_id}": {
      "get": {
        "tags": [
          "misc"
        ],
        "summary": "Get user job",
        "operationId": "getUserJob",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "Job uniquer identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/mode/{mode_name}": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Get details of a mode",
        "operationId": "modeHkpGetDetails",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "mode_name",
            "in": "path",
            "description": "Mode name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/HkpMode"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "device"
        ],
        "summary": "Update HKP mode settings",
        "operationId": "modeHkpUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "mode_name",
            "in": "path",
            "description": "Mode name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/photo": {
      "post": {
        "tags": [
          "photo"
        ],
        "summary": "Upload a new photo",
        "operationId": "uploadPhoto",
        "parameters": [
          {
            "name": "photo",
            "in": "body",
            "description": "Photo to upload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPhoto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "$ref": "#/definitions/UploadedPhoto"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/photo/{photo_id}": {
      "get": {
        "tags": [
          "photo"
        ],
        "summary": "Get a photo uploader by user",
        "operationId": "getPhoto",
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "photo_id",
            "in": "path",
            "description": "Photo identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/security": {
      "put": {
        "tags": [
          "site"
        ],
        "summary": "Change security level",
        "operationId": "changeSecurityLevel",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "security_level",
            "in": "body",
            "description": "Security object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Security"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "Site running restoration (message = error.site.restoration.running)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/ilo-to-somfy-protect": {
      "post": {
        "tags": [
          "ilo"
        ],
        "summary": "Start ILO site migration to Somfy Protect",
        "operationId": "iloToSomfyProtect",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "Access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/installer/{user_id}": {
      "delete": {
        "tags": [
          "installerSite"
        ],
        "summary": "Delete the link between a site and the installer",
        "operationId": "siteInstallerDelete",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "Password to check.",
            "required": true,
            "schema": {
              "properties": {
                "password": {
                  "description": "The password to check",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "Access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/installer": {
      "post": {
        "tags": [
          "installerSite"
        ],
        "summary": "Add a link between a site and the installer",
        "operationId": "siteInstallerAdd",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "schema": {
              "properties": {
                "user_email": {
                  "description": "Error user not found",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "Access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserOutput"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/invoice": {
      "get": {
        "tags": [
          "invoice"
        ],
        "summary": "Get invoices list",
        "operationId": "invoiceList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "ISO 8601 UTC timestamp (example: '2014-07-14T07:45:00.000Z').",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "ISO 8601 UTC timestamp (example: '2014-07-14T07:45:00.000Z').",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Set results order. '1' for ascending, '-1' for descending. Default: descending.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of results. Default: 50. Max: 200.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start_after",
            "in": "query",
            "description": "ISO 8601 microseconds timestamp to get next page (based on 'paid_on' value).",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_before",
            "in": "query",
            "description": "ISO 8601 microseconds timestamp to get previous page (based on 'paid_on' value).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceInvoiceCollection"
            }
          },
          "404": {
            "description": "(1) - Invalid date range between date_min and date_max (message = error.invalid_argument.bad_date_range) <br><br>\n     * (2) - Invalid start_after or end_before (message = error.invalid_argument.param_start_after_and_stop_before)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/invoice/{invoice_id}": {
      "get": {
        "tags": [
          "invoice"
        ],
        "summary": "Get PDF invoice",
        "operationId": "invoicePDF",
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "description": "Invoice identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Invoice not found"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/payment-method/update": {
      "post": {
        "tags": [
          "plan"
        ],
        "summary": "Get an URL to update the payment method",
        "operationId": "sitePaymentMethodUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/ServiceCheckoutOutput"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/plan/checkout": {
      "post": {
        "tags": [
          "plan"
        ],
        "summary": "Send cart and get checkout result",
        "operationId": "siteCheckout",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkout_input",
            "in": "body",
            "description": "Checkout data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceCheckoutInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/ServiceCheckoutOutput"
            }
          },
          "404": {
            "description": "Service name is unknown (message = checkout.option.name.badValue)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/plan/unsubscribe/immediately": {
      "post": {
        "tags": [
          "plan"
        ],
        "summary": "Cancellation imma",
        "operationId": "siteCancellationiImmediately",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "unsubscribe_input",
            "in": "body",
            "description": "Send email on unsubscribe",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceUnsubscribeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          },
          "404": {
            "description": "Subscription not found (message = subscription.notFound)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/plan/unsubscribe": {
      "delete": {
        "tags": [
          "plan"
        ],
        "summary": "Remove scheduled cancellation",
        "operationId": "siteRemoveScheduledCancellation",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          },
          "404": {
            "description": "Subscription not found (message = subscription.notFound)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/plan/current": {
      "get": {
        "tags": [
          "plan"
        ],
        "summary": "Get current plans",
        "operationId": "siteCurrentPlanList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull",
            "schema": {
              "$ref": "#/definitions/PlanCurrent"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/plan/available": {
      "get": {
        "tags": [
          "plan"
        ],
        "summary": "Get available plans",
        "operationId": "siteAvailablePlanList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull",
            "schema": {
              "$ref": "#/definitions/PlanAvailable"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/room": {
      "get": {
        "tags": [
          "room"
        ],
        "summary": "List rooms",
        "operationId": "listRooms",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoomList"
            }
          },
          "400": {
            "description": "Feature not available (message = error.feature.not_available)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "404": {
            "description": "Site not found (message = error.site.not_found)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "room"
        ],
        "summary": "Create a new room",
        "operationId": "createRoom",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "room",
            "in": "body",
            "description": "Room",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoomOutput"
            }
          },
          "400": {
            "description": "Site not found (message = error.parameter.invalid)<br>or<br>Feature not available (message = error.feature.not_available)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/room/{room_id}": {
      "put": {
        "tags": [
          "room"
        ],
        "summary": "Update a room",
        "operationId": "updateRoom",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "room_id",
            "in": "path",
            "description": "Room identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoomOutput"
            }
          },
          "400": {
            "description": "Feature not available (message = error.feature.not_available)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "404": {
            "description": "Site not found (message = error.site.not_found)<br>or<br>Room not found (message = error.room.not_found)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "room"
        ],
        "summary": "Delete a room",
        "operationId": "deleteRoom",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "room_id",
            "in": "path",
            "description": "Room identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Feature not available (message = error.feature.not_available)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "404": {
            "description": "Site not found (message = error.site.not_found)<br>or<br>Room not found (message = error.room.not_found)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/scenario-calendar": {
      "get": {
        "tags": [
          "calendarScenario"
        ],
        "summary": "Get list of calendar scenarios",
        "operationId": "siteCalendarScenarioGetList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "calendarScenario"
        ],
        "summary": "Create a calendar scenario",
        "operationId": "siteCalendarScenarioCreate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/scenario-calendar/{scenario_id}": {
      "get": {
        "tags": [
          "calendarScenario"
        ],
        "summary": "Get a calendar scenario",
        "operationId": "siteCalendarScenarioGet",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario_id",
            "in": "path",
            "description": "Calendar scenario id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "calendarScenario"
        ],
        "summary": "Update a calendar scenario",
        "operationId": "siteCalendarScenarioUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario_id",
            "in": "path",
            "description": "Calendar scenario id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "calendarScenario"
        ],
        "summary": "Delete a calendar scenario",
        "operationId": "siteCalendarScenarioDelete",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario_id",
            "in": "path",
            "description": "Calendar scenario id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/scenario-core": {
      "get": {
        "tags": [
          "coreScenario"
        ],
        "summary": "Get list of core scenarios",
        "operationId": "siteCoreScenarioGetList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/scenario-core/{trigger}": {
      "get": {
        "tags": [
          "coreScenario"
        ],
        "summary": "Get a core scenarios",
        "operationId": "siteCoreScenarioGet",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "trigger",
            "in": "path",
            "description": "Core scenario trigger",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "coreScenario"
        ],
        "summary": "Update a core scenarios",
        "operationId": "siteCoreScenarioUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "trigger",
            "in": "path",
            "description": "Core scenario trigger",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/scenario": {
      "get": {
        "tags": [
          "scenario"
        ],
        "summary": "Get list of scenarios",
        "operationId": "siteScenarioGetList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScenarioCollection"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "scenario"
        ],
        "summary": "Create a new scenario on a specific site",
        "operationId": "siteScenarioCreate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario",
            "in": "body",
            "description": "New scenario to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScenarioInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/scenario/{scenario_id}": {
      "put": {
        "tags": [
          "scenario"
        ],
        "summary": "Update a scenario",
        "operationId": "siteScenarioUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario_id",
            "in": "path",
            "description": "Scenario identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario",
            "in": "body",
            "description": "New scenario data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScenarioInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "scenario"
        ],
        "summary": "Delete a scenario",
        "operationId": "siteScenarioDelete",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "scenario_id",
            "in": "path",
            "description": "Scenario identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/history": {
      "get": {
        "tags": [
          "site"
        ],
        "summary": "Get filtered and sorted site events",
        "operationId": "siteHistory",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "ISO 8601 UTC timestamp (example: '2014-07-14T07:45:00.000Z').",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "ISO 8601 UTC timestamp (example: '2014-07-14T07:45:00.000Z').",
            "required": false,
            "type": "string"
          },
          {
            "name": "message_type",
            "in": "query",
            "description": "Comma separated list of event types (example: 'securityAlarm,securityLevel').",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Set results order. '1' for ascending, '-1' for descending. Default: descending.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of results. Default: 50. Max: 100.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start_after",
            "in": "query",
            "description": "ISO 8601 microseconds timestamp to get next page (based on 'occurred_at' value).",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_before",
            "in": "query",
            "description": "ISO 8601 microseconds timestamp to get previous page (based on 'occurred_at' value).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SiteEventCollection"
            }
          },
          "404": {
            "description": "(1) - No link between site and user (message = error.missing.user_site)<br><br>\n                        (3) - Bad start_after and end_before range (message = error.invalid_argument.param_start_after_and_stop_before)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/invitation": {
      "post": {
        "tags": [
          "invitation"
        ],
        "summary": "Send an invitation for using a site",
        "operationId": "siteInvitationSend",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitation",
            "in": "body",
            "description": "Invitation details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserOutput"
            }
          },
          "404": {
            "description": "Invalid argument received (message = error.invalid_argument.with_details)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          },
          "400": {
            "description": "User already on site (message = error.user_already_invited)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/invitation": {
      "post": {
        "tags": [
          "invitation"
        ],
        "summary": "Answer to an invitation",
        "operationId": "siteInvitationAnswer",
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "description": "Invitation answer details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteInvitationAnswer"
            }
          },
          {
            "name": "security_token",
            "in": "query",
            "description": "Security token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Wrong security token"
          },
          "404": {
            "description": "Invalid argument received (message = error.invalid_argument.with_details)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        }
      }
    },
    "/site/{site_id}/user": {
      "get": {
        "tags": [
          "userSite"
        ],
        "summary": "Retrieves the list of users of the site",
        "operationId": "siteScenarioGetList",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserCollection"
            }
          },
          "404": {
            "description": "Site unknown (message = error.unknown.site)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{siteId}/user/{userId}/code": {
      "put": {
        "tags": [
          "userSite"
        ],
        "summary": "add or update personal code",
        "operationId": "siteUserCodeAddOrUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "body",
            "description": "The individual code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "userSite"
        ],
        "summary": "delete personal code",
        "operationId": "siteUserCodeDelete",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/user/{user_id}": {
      "get": {
        "tags": [
          "userSite"
        ],
        "summary": "Get the link between a site and an user",
        "operationId": "siteUserDelete",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Site unknown (message = error.no.userSite)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "userSite"
        ],
        "summary": "Update the link between a site and an user",
        "operationId": "siteUserUpdate",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "site_user_link",
            "in": "body",
            "description": "Details of link between site and user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteUserLinkInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SiteUserLinkOutput"
            }
          },
          "404": {
            "description": "User invitation not found (message = error.invitation.not_found)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "userSite"
        ],
        "summary": "Delete the link between a site and an user",
        "operationId": "siteUserDelete",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/user/{user_id}/action": {
      "post": {
        "tags": [
          "userSite"
        ],
        "summary": "Signal an action to a link between a site and an user",
        "operationId": "siteUserAction",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "body",
            "description": "Details of an action on a link between site and user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSiteAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/user/{user_id}/token_action/{token}": {
      "get": {
        "summary": "Send a token action to a link between a site and an user",
        "operationId": "siteUserTokenAction",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/site/{site_id}/user/{user_id}/location": {
      "put": {
        "summary": "Send location information to a link between a site and an user",
        "operationId": "updateSiteUserLocation",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "body",
            "description": "Details to update geoFencing or presence",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LocationOutput"
            }
          }
        }
      }
    },
    "/site": {
      "get": {
        "tags": [
          "site"
        ],
        "summary": "List available sites for the current user",
        "operationId": "siteGetList",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SiteCollection"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "site"
        ],
        "summary": "Creates a new site",
        "operationId": "createSite",
        "parameters": [
          {
            "name": "site",
            "in": "body",
            "description": "Site object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SiteOutput"
            }
          },
          "404": {
            "description": "Site Name or User not found (message = error.invalid_arguments)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}": {
      "get": {
        "tags": [
          "site"
        ],
        "summary": "Get a specific site for the current user",
        "operationId": "getSite",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SiteOutput"
            }
          },
          "404": {
            "description": "Site not found (message = error.notFound.site)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "site"
        ],
        "summary": "update a site",
        "operationId": "updateSite",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "site",
            "in": "body",
            "description": "Site object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "(1) - Invalid argument received (message = error.invalid_arguments) <br><br>\n     * (2) - Site not found (message = error.site.not_found)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "site"
        ],
        "summary": "Delete a site",
        "operationId": "deleteSite",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "(1) - Site can't be deleted because it has device installed (message = error.site.cant_delete.not_empty_device)<br><br>\n     * (2) - Site can't be deleted (message = error.site.cant_delete)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/panic": {
      "post": {
        "tags": [
          "site"
        ],
        "summary": "Put site in panic mode",
        "operationId": "sitePanicStart",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "panic",
            "in": "body",
            "description": "Panic mode details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Panic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/alarm/stop": {
      "put": {
        "tags": [
          "site"
        ],
        "summary": "Stop current site alarm",
        "operationId": "siteAlarmStop",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/domestic-alarm/{alarm_id}/stop": {
      "put": {
        "tags": [
          "site"
        ],
        "summary": "Stop domestic alarm",
        "operationId": "siteDomesticAlarmStop",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "alarm_id",
            "in": "path",
            "description": "Domestic alarm identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/alarm/trigger_manual_alarm": {
      "put": {
        "tags": [
          "site"
        ],
        "summary": "Trigger site alarm",
        "operationId": "siteManualAlarmTrigger",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/privacy": {
      "put": {
        "tags": [
          "site"
        ],
        "summary": "Set the privacy state",
        "operationId": "siteSetPrivacy",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "privacy",
            "in": "body",
            "description": "Privacy details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SitePrivacy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully scheduled",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/site/{site_id}/lorawan/covertest": {
      "get": {
        "tags": [
          "site"
        ],
        "summary": "LoRawan Cover test on site",
        "operationId": "getSiteLorawanCoverTest",
        "parameters": [
          {
            "name": "site_id",
            "in": "path",
            "description": "Site identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LoraWanCover"
            }
          },
          "404": {
            "description": "(1) - Master device not compatible (message = error.lorawan.device.compatibility)<br><br>\n     * (2) - Wrong address (message = error.site.geocoding)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/user/{user_id}/feedback": {
      "post": {
        "tags": [
          "misc"
        ],
        "summary": "Send feedback",
        "operationId": "userFeedbackCreate",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "feedback",
            "in": "body",
            "description": "Feedback",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feedback"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/user/{user_id}/mobile": {
      "post": {
        "tags": [
          "mobile"
        ],
        "summary": "Provide details of mobile phone for a user",
        "operationId": "userMobileCreate",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "mobile",
            "in": "body",
            "description": "Mobile details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mobile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Mobile"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/user/{user_id}/mobile/{phone_id}": {
      "delete": {
        "tags": [
          "mobile"
        ],
        "summary": "Remove association between an user and a mobile",
        "operationId": "userMobileDelete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone_id",
            "in": "path",
            "description": "Identifier of the phone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a user account",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "site_user_link",
            "in": "body",
            "description": "Details of link between site and user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserOutput"
            }
          }
        }
      }
    },
    "/user-guest": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates a guest user account",
        "description": "Creates a new user without credentials, associated to the site and available for fob / user association",
        "operationId": "userGuestCreate",
        "parameters": [
          {
            "name": "site_user_link",
            "in": "body",
            "description": "Details of link between site and user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGuestInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserGuestOutput"
            }
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/user/{user_id}": {
      "get": {
        "summary": "Get user information",
        "operationId": "getUserInfo",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier. Current logged user if not provided",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserOutputWithSites"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update an user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier. Current logged user if not provided",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInputForUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "myfox_auth": [
              "api.full"
            ]
          }
        ]
      }
    },
    "/user/password/send": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send password change token via email to user",
        "operationId": "sendPasswordToken",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Email of user that needs password change",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/user/secure": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a user with a secure token sent by email",
        "operationId": "updateUserWithToken",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInputWithSecureToken"
            }
          },
          {
            "name": "security_token",
            "in": "query",
            "description": "secure token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/user/{user_id}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user password",
        "operationId": "userPasswordSet",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "Password details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "(1) - User not found (message = error.user.not_found)<br><br>(2) - User password mismatch (message = error.user.password.mismatch)",
            "schema": {
              "$ref": "#/definitions/ApiException"
            }
          }
        }
      }
    },
    "/user/validate-email/{email}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Is email valid",
        "operationId": "validateEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email to validate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "properties": {
                "email_is_valid": {
                  "description": "Is email valid?",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/user/gdpr-delete": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete SP data for the current user",
        "operationId": "deleteSPData",
        "parameters": [
          {
            "name": "password",
            "in": "body",
            "description": "Password to check.",
            "required": true,
            "schema": "string"
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "Access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "delete",
            "in": "query",
            "description": "(1) -> Delete user and SSO link<br>(2) -> Make user GDPR compliant (default)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "client-id",
            "in": "header",
            "description": "Current OAuth Client ID (Example : 123456_132456)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "(error.user.password.unreadable) Returned when the password is missing<br>(error.missing.token) Returned when the client realm is missing<br>(error.user.password.mismatch) Returned when the password is incorrect"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiException": {
      "required": [
        "message",
        "data",
        "uid"
      ],
      "properties": {
        "message": {
          "description": "Exception message.",
          "type": "string"
        },
        "data": {
          "description": "Exception data.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "description": "Exception UID.",
          "type": "string"
        }
      }
    },
    "DeviceAbstract": {
      "properties": {
        "label": {
          "description": "The device label.",
          "type": "string"
        },
        "roomId": {
          "description": "The room id.",
          "type": "string"
        },
        "settings": {
          "description": "Settings",
          "$ref": "#/definitions/DeviceSettings"
        }
      }
    },
    "DeviceAction": {
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Action to perform.",
          "type": "string",
          "enum": [
            "shutter_close",
            "shutter_open",
            "test_start",
            "test_stop",
            "test_extend",
            "stream_start",
            "stream_stop",
            "push_to_talk_start",
            "push_to_talk_stop",
            "change_video_backend",
            "light_on",
            "light_off",
            "measure_ambient_light"
          ]
        },
        "duration": {
          "type": "integer"
        },
        "video_backend": {
          "type": "string",
          "enum": [
            "evostream",
            "webrtc"
          ]
        },
        "sessionId": {
          "type": "string"
        }
      }
    },
    "DeviceCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceOutput"
          }
        }
      }
    },
    "DeviceCompatibility": {
      "required": [
        "device",
        "installed",
        "max"
      ],
      "properties": {
        "device": {
          "description": "Device Definition.",
          "$ref": "#/definitions/DeviceDefinition"
        },
        "installed": {
          "description": "The number of installed devices",
          "type": "integer"
        },
        "max": {
          "description": "The maximum of installable devices",
          "type": "integer"
        }
      }
    },
    "DeviceCompatibilityCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of DeviceCompatibility objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCompatibility"
          },
          "xml": {
            "name": "DeviceCompatibility",
            "wrapped": true
          }
        }
      }
    },
    "DeviceDefinition": {
      "required": [
        "id",
        "label",
        "type"
      ],
      "properties": {
        "device_definition_id": {
          "description": "The device definition unique identifier",
          "type": "string",
          "enum": [
            "mss_camera",
            "mss_plug",
            "mss_remote",
            "mss_siren",
            "mss_outdoor_siren",
            "mss_tag",
            "mss_camera_myfox_1",
            "mss_aio_1_plus",
            "mss_aio_1",
            "sp_indoor_cam1"
          ]
        },
        "label": {
          "description": "The device label",
          "type": "string"
        },
        "type": {
          "description": "The device type",
          "type": "string",
          "enum": [
            "box",
            "camera",
            "remote",
            "siren",
            "tag"
          ]
        }
      }
    },
    "Diagnosis": {
      "properties": {
        "is_everything_ok": {
          "description": "Is everything ok ?",
          "type": "boolean"
        },
        "problems": {
          "description": "List of problems.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExtendOptions": {
      "properties": {
        "duration": {
          "description": "Extend duration.",
          "type": "integer"
        }
      }
    },
    "DeviceInput": {
      "properties": {
        "label": {
          "description": "The device label.",
          "type": "string"
        },
        "roomId": {
          "description": "The room id.",
          "type": "string"
        },
        "settings": {
          "description": "Settings",
          "$ref": "#/definitions/DeviceSettings"
        }
      }
    },
    "InstallOptions": {
      "properties": {
        "tag_support_type": {
          "description": "Support type of IntelliTAG.",
          "type": "string",
          "enum": [
            "externdoor",
            "interndoor",
            "window",
            "slidewindow",
            "slidedoor",
            "garage",
            "other"
          ]
        },
        "mac": {
          "description": "MAC address when installing a link.",
          "type": "string"
        },
        "serial": {
          "description": "Serial number when installing a HKP Gateway.",
          "type": "string"
        },
        "duration": {
          "description": "Learning duration.",
          "type": "integer"
        }
      }
    },
    "InstallOptionsHomeKit": {
      "properties": {
        "mac": {
          "description": "MAC address when installing a device.",
          "type": "string"
        },
        "uuid": {
          "description": "UUID token.",
          "type": "string"
        }
      }
    },
    "MyfoxAroundOptions": {
      "properties": {
        "state": {
          "description": "Myfox Around state.",
          "type": "string",
          "enum": [
            "enabled",
            "disabled",
            "discovery"
          ]
        }
      }
    },
    "DeviceOutput": {
      "required": [
        "device_id",
        "site_id",
        "device_definition",
        "status"
      ],
      "properties": {
        "device_id": {
          "description": "The device unique identifier.",
          "type": "string"
        },
        "box_id": {
          "description": "The device box identifier.",
          "type": "string"
        },
        "site_id": {
          "description": "The device site identifier.",
          "type": "string"
        },
        "version": {
          "description": "The device firmware version.",
          "type": "string"
        },
        "mac": {
          "description": "The device MAC address.",
          "type": "string"
        },
        "device_definition": {
          "description": "The device definition.",
          "$ref": "#/definitions/DeviceDefinition"
        },
        "status": {
          "description": "The device status.",
          "$ref": "#/definitions/DeviceStatus"
        },
        "into_subscription": {
          "description": "Device is into a subscription (uninstall will be forbidden).",
          "type": "boolean"
        },
        "push_to_talk_available": {
          "description": "Camera has push to talk available.",
          "type": "boolean"
        },
        "provider_id": {
          "description": "Provider ID.",
          "type": "string"
        },
        "update_available": {
          "type": "boolean"
        },
        "master": {
          "description": "Is it master device.",
          "type": "boolean"
        },
        "somfy_one_type": {
          "description": "Somfy One Type.",
          "type": "string",
          "enum": [
            "somfy_one",
            "somfy_one_plus"
          ]
        },
        "video_backend": {
          "description": "Video Backend.",
          "type": "string"
        },
        "diagnosis": {
          "description": "The device diagnosis."
        },
        "is_full_gsm": {
          "type": "boolean"
        },
        "label": {
          "description": "The device label.",
          "type": "string"
        },
        "roomId": {
          "description": "The room id.",
          "type": "string"
        },
        "settings": {
          "description": "Settings",
          "$ref": "#/definitions/DeviceSettings"
        }
      }
    },
    "DeviceOutputMinimal": {
      "required": [
        "device_id",
        "label",
        "device_definition_id"
      ],
      "properties": {
        "device_id": {
          "description": "The device identifier.",
          "type": "string"
        },
        "label": {
          "description": "The device label.",
          "type": "string",
          "example": "Tribune camera"
        },
        "device_definition_id": {
          "description": "The device definition identifier.",
          "type": "string",
          "enum": [
            "mss_camera",
            "mss_plug",
            "mss_remote",
            "mss_siren",
            "mss_tag"
          ]
        }
      }
    },
    "Reset": {
      "properties": {
        "reset": {
          "description": "Encrypted reset payload.",
          "type": "string"
        }
      }
    },
    "DeviceSettings": {
      "required": [
        "global",
        "disarmed",
        "partial",
        "armed"
      ],
      "properties": {
        "global": {
          "description": "Global settings.",
          "$ref": "#/definitions/DeviceSettingsGlobal"
        },
        "disarmed": {
          "description": "Settings for security level 'disarmed'.",
          "$ref": "#/definitions/DeviceSettingsDisarmed"
        },
        "partial": {
          "description": "Settings for security level 'partial' (aka 'night mode').",
          "$ref": "#/definitions/DeviceSettingsPartial"
        },
        "armed": {
          "description": "\"Settings for security level 'armed'.",
          "$ref": "#/definitions/DeviceSettingsArmed"
        }
      }
    },
    "SecurityLevelSettingAbstract": {
      "properties": {
        "auto_protect_enabled": {
          "description": "Enable auto protection (for siren).",
          "type": "boolean"
        }
      }
    },
    "DeviceSettingsArmed": {
      "properties": {
        "auto_protect_enabled": {
          "description": "Enable auto protection (for siren).",
          "type": "boolean"
        }
      }
    },
    "DeviceSettingsDisarmed": {
      "properties": {
        "auto_protect_enabled": {
          "description": "Enable auto protection (for siren).",
          "type": "boolean"
        }
      }
    },
    "DeviceSettingsGlobal": {
      "properties": {
        "user_id": {
          "description": "User associated to this device (for remote).",
          "type": "string"
        },
        "wifi_ssid": {
          "description": "Wifi SSID (for plug and camera).",
          "type": "string"
        },
        "detection_enabled": {
          "description": "Enable detection (for camera).",
          "type": "boolean"
        },
        "sound_enabled": {
          "description": "Enable sound (for siren and keypad).",
          "type": "boolean"
        },
        "light_enabled": {
          "description": "Enable lights (for siren and pir).",
          "type": "boolean"
        },
        "test_reminder_enabled": {
          "description": "Test reminder (for smoke detector).",
          "type": "boolean"
        },
        "extended_alarm_enabled": {
          "description": "Extended alarm (for smoke detector).",
          "type": "boolean"
        },
        "code_required_to_arm": {
          "description": "Keypad security parameter.",
          "type": "boolean"
        },
        "sensitivity": {
          "description": "Sensitivity (for IntelliTAG, Camera).",
          "type": "integer"
        },
        "sensitivity_level": {
          "description": "Sensitivity level (for PIR).",
          "type": "string",
          "enum": [
            "low",
            "medium",
            "high"
          ]
        },
        "support_type": {
          "description": "Support type (for IntelliTAG).",
          "type": "string"
        },
        "night_vision": {
          "description": "Night vision (for camera).",
          "type": "string",
          "enum": [
            "on",
            "off",
            "automatic"
          ]
        },
        "led_enabled": {
          "description": "LED Enabled (for camera)."
        },
        "hdvideo_enabled": {
          "description": "HD Video Enabled (for camera).",
          "type": "boolean"
        },
        "video_mode": {
          "description": "Video modes (for AIO).",
          "type": "string",
          "enum": [
            "SD",
            "HD",
            "FHD"
          ]
        },
        "detection_regions": {
          "description": "Detection Regions (for camera).",
          "type": "boolean"
        },
        "enabled": {
          "description": "Device Enabled (for remote).",
          "type": "boolean"
        },
        "prealarm_enabled": {
          "description": "Enable-Disable pre-alarm (for IntelliTAG, Camera and Pir).",
          "type": "boolean"
        },
        "auto_protect_enabled": {
          "description": "Enable-Disable auto-protection (for Keypad, Pir and Siren).",
          "type": "boolean"
        },
        "thresholdAcc": {
          "description": "Threshold acceleration (for Outdoor Siren).",
          "type": "integer"
        },
        "smoke_alarm_listening_enabled": {
          "description": "Enable-Disable smoke alarm listening (for Camera).",
          "type": "boolean"
        },
        "smoke_alarm_state": {
          "description": "Define smoke alarm setting (for SomfyOne and SomfyOne+).",
          "type": "string",
          "enum": [
            "never",
            "armed",
            "always"
          ]
        },
        "night_mode_enabled": {
          "description": "Enable-Disable use in night mode (for TAG, Camera and Pir).",
          "type": "boolean"
        },
        "sound_recording_enabled": {
          "description": "Enable-Disable sound recording (for MyfoxCamera).",
          "type": "boolean"
        },
        "siren_on_camera_detection_disabled": {
          "description": "Enable siren on camera detection (for AIO).",
          "type": "boolean"
        },
        "siren_disabled": {
          "description": "Enable outdoor camera's siren.",
          "type": "boolean"
        },
        "autoRotateEnabled": {
          "description": "Enable-Disable video rotation (for OutdoorCamera).",
          "type": "boolean"
        },
        "autoRotateOrientation": {
          "description": "OutdoorCamera auto rotate .",
          "type": "boolean"
        },
        "smart_alarm_duration": {
          "description": "Smart alarm duration (for OutdoorCamera).",
          "type": "integer"
        },
        "sound_alarm": {
          "description": "Enable-Disable siren sound pre-alarm (true:Siren, false:Voice) (for OutdoorCamera).",
          "type": "boolean"
        },
        "lighting_trigger": {
          "description": "Trigger for lighting (for OutdoorCamera).",
          "type": "string",
          "enum": [
            "always",
            "alarm_on",
            "manual"
          ]
        },
        "ambient_light_threshold": {
          "description": "Ambient light threshold (for OutdoorCamera).",
          "type": "integer"
        },
        "lighting_duration": {
          "description": "Lighting duration when detection (for OutdoorCamera).",
          "type": "integer"
        },
        "lighting_wired": {
          "description": "Is lighting is wired to device ? (for OutdoorCamera).",
          "type": "boolean"
        },
        "voice_alarm_locale": {
          "description": "Locale voice for pre-alarm ? (for OutdoorCamera).",
          "type": "string"
        },
        "hdr_enabled": {
          "description": "HDR video (for AllInOne, AllInOne+, IndoorCamera, OutdoorCamera).",
          "type": "boolean"
        },
        "human_detect_enabled": {
          "description": "Human Detect Enabled (for OutdoorCamera).",
          "type": "boolean"
        },
        "latch_wired": {
          "description": "Is latch wired?"
        },
        "gate_wired": {
          "description": "Is gate wired?"
        }
      }
    },
    "DeviceSettingsPartial": {
      "properties": {
        "auto_protect_enabled": {
          "description": "Enable auto protection (for siren).",
          "type": "boolean"
        }
      }
    },
    "DeviceStatus": {
      "properties": {
        "last_status_at": {
          "description": "Last status date (AIO, AIO+, Box, Extender, OutdoorSiren, Pir, Remote, Siren, Tag).",
          "type": "string",
          "format": "date-time"
        },
        "rlink_quality": {
          "description": "rLink Quality (AIO, AIO+, Camera, Extender, OutdoorSiren, Pir, Remote, Siren, Tag).",
          "type": "integer"
        },
        "rlink_quality_percent": {
          "description": "rLink Quality Percent (AIO, AIO+, Camera, Extender, OutdoorSiren, Pir, Siren, Tag).",
          "type": "integer"
        },
        "battery_level": {
          "description": "Level of battery (AIO+, Box, OutdoorSiren, Pir, Remote, Siren, Tag).",
          "type": "integer"
        },
        "device_lost": {
          "description": "Is device lost ? (Extender, OutdoorSiren, Pir, Remote, Siren, Tag).",
          "type": "boolean"
        },
        "power_mode": {
          "description": "Power mode (AIO, AIO+, Box, Camera, Extender).",
          "type": "string",
          "default": "null",
          "enum": [
            "battery",
            "current"
          ]
        },
        "last_online_at": {
          "description": "Time of last online (AIO, AIO+, Box, Camera).",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Time of last offline (AIO, AIO+, Box, Camera).",
          "type": "string",
          "format": "date-time"
        },
        "wifi_level": {
          "description": "Level of wifi signal (AIO, AIO+, Box, Camera).",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent (AIO, AIO+, Box, Camera).",
          "type": "integer"
        },
        "power_state": {
          "description": "Power state (AIO, AIO+, Box).",
          "type": "integer"
        },
        "mfa_quality_percent": {
          "description": "mfa Quality Percent (AIO, AIO+, Box).",
          "type": "integer"
        },
        "mfa_last_test_at": {
          "description": "Last myfox around test (AIO, AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "mfa_last_test_success_at": {
          "description": "Last myfox around test success (AIO, AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "mfa_last_online_at": {
          "description": "Last MFA online status (AIO, AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "mfa_last_offline_at": {
          "description": "Last MFA ofline status (AIO, AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "mfa_last_connected_at": {
          "description": "Last MFA connected status (AIO, AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "mfa_last_disconnected_at": {
          "description": "Last MFA disconnected status (AIO, AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "shutter_state": {
          "description": "Shutter state (AIO, AIO+, Camera).",
          "type": "string",
          "enum": [
            "opened",
            "closed"
          ]
        },
        "last_shutter_opened_at": {
          "description": "Last shutter opened (AIO, AIO+, Camera).",
          "type": "string",
          "format": "date-time"
        },
        "last_shutter_closed_at": {
          "description": "Last shutter closed (AIO, AIO+, Camera).",
          "type": "string",
          "format": "date-time"
        },
        "rlink_state": {
          "description": "rLink state (Remote, Siren, Tag).",
          "type": "integer"
        },
        "lora_quality_percent": {
          "description": "Lorawan Quality Percent (AIO+, Box).",
          "type": "integer"
        },
        "lora_last_test_at": {
          "description": "Last LoraWan test (AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "lora_last_test_success_at": {
          "description": "Last LoraWan success test (AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "lora_last_online_at": {
          "description": "Last LoraWan online status (AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "lora_last_offline_at": {
          "description": "Last LoraWan offline status (AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "lora_last_connected_at": {
          "description": "Last LoraWan connected status (AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "lora_last_disconnected_at": {
          "description": "Last LoraWan disconnected status (AIO+, Box).",
          "type": "string",
          "format": "date-time"
        },
        "temperature": {
          "description": "Temperature (Pir, OutdoorSiren).",
          "type": "number",
          "format": "float"
        },
        "temperatureAt": {
          "description": "Time of last temperature (OutdoorSiren, Pir).",
          "type": "string",
          "format": "date-time"
        },
        "fsk_level": {
          "description": "FSK Level (Box).",
          "type": "integer"
        },
        "ble_level": {
          "description": "BLE Level (Box).",
          "type": "integer"
        },
        "battery_status": {
          "description": "Battery status (Extender).",
          "type": "integer"
        },
        "mounted_at": {
          "description": "Time of outdoor siren installation (OutdoorSiren).",
          "type": "string",
          "format": "date-time"
        },
        "battery_low": {
          "description": "Is battery low (Pir).",
          "type": "boolean"
        },
        "battery_level_state": {
          "description": "Remote battery level state (Remote).",
          "type": "integer"
        },
        "keep_alive": {
          "description": "Remote keep alive (Remote).",
          "type": "integer"
        },
        "last_check_in_state": {
          "description": "Last check in from remote (Remote).",
          "type": "string",
          "format": "date-time"
        },
        "last_check_out_state": {
          "description": "Last check out from remote (Remote).",
          "type": "string",
          "format": "date-time"
        },
        "recalibration_required": {
          "description": "Is Tag recalibration required (Tag).",
          "type": "boolean"
        },
        "recalibrateable": {
          "description": "Is Tag can be recalibrate (Tag).",
          "type": "boolean"
        },
        "cover_present": {
          "description": "Is Tag cover present (Tag).",
          "type": "boolean"
        },
        "homekit_capable": {
          "description": "Is Homekit capable ? (SOC).",
          "type": "boolean"
        }
      }
    },
    "AllInOnePlusStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "battery_level": {
          "description": "Battery level.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "rlink_quality": {
          "description": "rLink Quality.",
          "type": "integer"
        },
        "rlink_quality_percent": {
          "description": "rLink Quality Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "shutter_state": {
          "description": "Shutter state.",
          "type": "integer"
        },
        "last_shutter_opened_at": {
          "description": "Last shutter opened.",
          "type": "string",
          "format": "date-time"
        },
        "last_shutter_closed_at": {
          "description": "Last shutter closed.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {
          "description": "Power Mode.",
          "type": "string"
        },
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AllInOneStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "rlink_quality": {
          "description": "rLink Quality.",
          "type": "integer"
        },
        "rlink_quality_percent": {
          "description": "rLink Quality Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "shutter_state": {
          "description": "Shutter state.",
          "type": "integer"
        },
        "last_shutter_opened_at": {
          "description": "Last shutter opened.",
          "type": "string",
          "format": "date-time"
        },
        "last_shutter_closed_at": {
          "description": "Last shutter closed.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {
          "description": "Power Mode.",
          "type": "string"
        },
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BoxStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "battery_level": {
          "description": "Battery level.",
          "type": "integer"
        },
        "fsk_level": {
          "description": "FSK Level.",
          "type": "integer"
        },
        "ble_level": {
          "description": "BLE Level.",
          "type": "integer"
        },
        "wifi_level": {
          "description": "Wifi Level.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {},
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CameraStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExtenderStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GatewayStatus": {
      "properties": {
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "IndoorCameraStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "rlink_quality": {
          "description": "rLink Quality.",
          "type": "integer"
        },
        "rlink_quality_percent": {
          "description": "rLink Quality Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "shutter_state": {
          "description": "Shutter state.",
          "type": "integer"
        },
        "last_shutter_opened_at": {
          "description": "Last shutter opened.",
          "type": "string",
          "format": "date-time"
        },
        "last_shutter_closed_at": {
          "description": "Last shutter closed.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {
          "description": "Power Mode.",
          "type": "string"
        },
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "KeypadStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LinkTwoPlusStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "battery_level": {
          "description": "Battery level.",
          "type": "integer"
        },
        "gsm_antenna_in_use": {
          "type": "string"
        },
        "fsk_level": {
          "description": "FSK Level.",
          "type": "integer"
        },
        "ble_level": {
          "description": "BLE Level.",
          "type": "integer"
        },
        "wifi_level": {
          "description": "Wifi Level.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {},
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LinkTwoStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "internal_battery_level": {
          "description": "Internal battery level.",
          "type": "integer"
        },
        "wifi_level": {
          "description": "Wifi Level.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {},
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OutdoorCameraStatus": {
      "properties": {
        "power_state": {
          "description": "Power state.",
          "type": "integer"
        },
        "wifi_level_percent": {
          "description": "Wifi Level Percent.",
          "type": "integer"
        },
        "rlink_quality": {
          "description": "rLink Quality.",
          "type": "integer"
        },
        "rlink_quality_percent": {
          "description": "rLink Quality Percent.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "shutter_state": {
          "description": "Shutter state.",
          "type": "integer"
        },
        "last_shutter_opened_at": {
          "description": "Last shutter opened.",
          "type": "string",
          "format": "date-time"
        },
        "last_shutter_closed_at": {
          "description": "Last shutter closed.",
          "type": "string",
          "format": "date-time"
        },
        "power_mode": {
          "description": "Power Mode.",
          "type": "string"
        },
        "lighting_state": {
          "description": "Lighting state.",
          "type": "string",
          "enum": [
            "on",
            "off"
          ]
        },
        "homekit_capable": {
          "description": "Is Homekit capable ?",
          "type": "boolean"
        },
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OutdoorSirenStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PirStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RemoteStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SirenStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SmokeDetectorStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TagStatus": {
      "properties": {
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "VAddonStatus": {
      "properties": {
        "wifi_level": {
          "description": "Wifi Level.",
          "type": "integer"
        },
        "last_online_at": {
          "description": "Last online status.",
          "type": "string",
          "format": "date-time"
        },
        "last_offline_at": {
          "description": "Last ofline status.",
          "type": "string",
          "format": "date-time"
        },
        "device_lost": {
          "description": "Is device lost ? (Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "boolean"
        },
        "last_status_at": {
          "description": "Last status date (Box, AIO, AIO+, Pir, Siren, OutdoorSiren, Remote, Tag, Extender).",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WebRTCSessionInput": {
      "required": [
        "session_id"
      ],
      "properties": {
        "session_id": {
          "description": "WebRTC Session Identifier.",
          "example": "12345"
        }
      }
    },
    "WifiCredentials": {
      "properties": {
        "wifi_s_s_i_d": {
          "description": "Wifi SSID.",
          "type": "string"
        },
        "wifi_password": {
          "description": "Wifi Password.",
          "type": "string"
        }
      }
    },
    "DomesticAlarmOutputCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of domestic alarms outpub.",
          "type": "array",
          "items": {}
        }
      }
    },
    "Job": {
      "required": [
        "job_id",
        "site_id",
        "user_id",
        "state",
        "payload"
      ],
      "properties": {
        "job_id": {
          "description": "Job identifier.",
          "type": "string"
        },
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "user_id": {
          "description": "Job owner identifier.",
          "type": "string"
        },
        "state": {
          "description": "Current job state.",
          "type": "string"
        },
        "created_at": {
          "description": "Job creation timestamp in milliseconds.",
          "type": "integer"
        }
      }
    },
    "JobCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of user's job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        }
      }
    },
    "Mobile": {
      "required": [
        "type",
        "push_id",
        "version_os",
        "version_app",
        "phone_id",
        "rich_push_compatible"
      ],
      "properties": {
        "type": {
          "description": "Type of mobile phone.",
          "type": "string",
          "enum": [
            "ios",
            "android"
          ]
        },
        "push_id": {
          "description": "Identifier for pushing message to the phone.",
          "type": "string"
        },
        "version_os": {
          "description": "Version of operating system.",
          "type": "string"
        },
        "version_app": {
          "description": "Version of app.",
          "type": "string"
        },
        "phone_id": {
          "description": "Identifier of the phone.",
          "type": "string"
        },
        "badge": {
          "description": "Current badge value.",
          "type": "integer"
        },
        "rich_push_compatible": {
          "description": "Is app is rich push compatible.",
          "type": "boolean"
        },
        "has_watch": {
          "description": "Is mobile has watch.",
          "type": "boolean"
        },
        "type_push_provider": {
          "description": "Push provider.",
          "type": "string"
        },
        "model": {
          "description": "Model of the phone.",
          "type": "string",
          "example": "iPhone 13 Pro"
        },
        "manufacturer": {
          "description": "Manufacturer.",
          "type": "string",
          "example": "Apple"
        },
        "buildcode_app": {
          "description": "Build code app.",
          "type": "string",
          "example": "15000"
        },
        "branding_app": {
          "description": "Branding app.",
          "type": "string",
          "example": "Ilo"
        },
        "app_variant": {
          "description": "App variant.",
          "type": "string",
          "example": "Multi"
        },
        "h264_codec": {
          "description": "H264 Codec.",
          "type": "string",
          "example": "OMX.qcom.video.encoder.avc"
        },
        "hevc_codec": {
          "description": "HEVC Codec.",
          "type": "string",
          "example": "OMX.qcom.video.encoder.h265"
        },
        "vp8_codec": {
          "description": "VP8 Codec.",
          "type": "string",
          "example": "OMX.qcom.video.encoder.vp8"
        },
        "vp9_codec": {
          "description": "VP9 Codec.",
          "type": "string",
          "example": "OMX.qcom.video.encoder.vp9"
        },
        "av1_codec": {
          "description": "AV1 Codec.",
          "type": "string",
          "example": "OMX.qcom.video.encoder.av1"
        },
        "soc_model": {
          "description": "SOC Model.",
          "type": "string",
          "example": "exynos9820"
        },
        "soc_manufacturer": {
          "description": "SOC Manufacturer.",
          "type": "string",
          "example": "Samsung"
        },
        "last_seen_at": {
          "description": "Last seen date.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Panic": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Type panic mode.",
          "type": "string",
          "enum": [
            "silent",
            "alarm"
          ]
        }
      }
    },
    "Password": {
      "required": [
        "old_password",
        "new_password"
      ],
      "properties": {
        "old_password": {
          "description": "Old password.",
          "type": "string",
          "example": "myOldPassword"
        },
        "new_password": {
          "description": "New password.",
          "type": "string",
          "example": "myNewPassword"
        }
      }
    },
    "NewPhoto": {
      "required": [
        "base64_raw"
      ],
      "properties": {
        "base64_raw": {
          "description": "The photo encoded with base64.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "UploadedPhoto": {
      "required": [
        "photo_id"
      ],
      "properties": {
        "photo_id": {
          "description": "The photo identifier.",
          "type": "string"
        }
      }
    },
    "ScenarioAbstract": {
      "required": [
        "time",
        "days",
        "security_level"
      ],
      "properties": {
        "time": {
          "description": "Start time of Scenario in format HH:MM.",
          "type": "string",
          "example": "09:00"
        },
        "days": {
          "description": "Days of week when Scenario must be applied. Possible values for days: mo, tu, we, th, fr, sa, su.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "mo",
            "tu",
            "we",
            "th",
            "fr"
          ]
        },
        "security_level": {
          "description": "Security level.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        },
        "enabled": {
          "description": "Is scenario enabled?",
          "type": "boolean"
        },
        "scenario_action": {
          "description": "Action.",
          "$ref": "#/definitions/ScenarioAction"
        }
      }
    },
    "ScenarioCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of scenarios.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScenarioOutput"
          }
        }
      }
    },
    "ScenarioInput": {
      "properties": {
        "time": {
          "description": "Start time of Scenario in format HH:MM.",
          "type": "string",
          "example": "09:00"
        },
        "days": {
          "description": "Days of week when Scenario must be applied. Possible values for days: mo, tu, we, th, fr, sa, su.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "mo",
            "tu",
            "we",
            "th",
            "fr"
          ]
        },
        "security_level": {
          "description": "Security level.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        },
        "enabled": {
          "description": "Is scenario enabled?",
          "type": "boolean"
        },
        "scenario_action": {
          "description": "Action.",
          "$ref": "#/definitions/ScenarioAction"
        }
      }
    },
    "ScenarioOutput": {
      "required": [
        "scenario_id",
        "status"
      ],
      "properties": {
        "scenario_id": {
          "description": "Scenario identifier.",
          "type": "string"
        },
        "status": {
          "description": "Scenario status.",
          "type": "string",
          "enum": [
            "pending_creation",
            "pending_update",
            "pending_delete",
            "up_to_date"
          ]
        },
        "time": {
          "description": "Start time of Scenario in format HH:MM.",
          "type": "string",
          "example": "09:00"
        },
        "days": {
          "description": "Days of week when Scenario must be applied. Possible values for days: mo, tu, we, th, fr, sa, su.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "mo",
            "tu",
            "we",
            "th",
            "fr"
          ]
        },
        "security_level": {
          "description": "Security level.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        },
        "enabled": {
          "description": "Is scenario enabled?",
          "type": "boolean"
        },
        "scenario_action": {
          "description": "Action.",
          "$ref": "#/definitions/ScenarioAction"
        }
      }
    },
    "ScenarioAction": {
      "properties": {
        "action": {
          "description": "Scenario Action.",
          "type": "string",
          "example": "privacy"
        },
        "value": {
          "description": "Scenario Action Value.",
          "type": "string",
          "example": [
            "1",
            "true"
          ]
        }
      }
    },
    "Security": {
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "Security status.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        }
      }
    },
    "SiteAbstract": {
      "required": [
        "label",
        "timezone",
        "country"
      ],
      "properties": {
        "label": {
          "description": "Site label.",
          "type": "string",
          "example": "Ernest Home"
        },
        "servicesVersion": {
          "description": "Site Services Version.",
          "type": "integer",
          "example": "1"
        },
        "subscription_active": {
          "description": "Is site subscription active.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone of the site location.",
          "type": "string",
          "example": "Europe/Paris"
        },
        "name": {
          "description": "Name of the site location.",
          "type": "string",
          "example": "John Doe"
        },
        "address1": {
          "description": "Address of the site location.",
          "type": "string",
          "example": "114 Rue des Troenes"
        },
        "address2": {
          "description": "Address complement of the site location.",
          "type": "string",
          "example": "Centrale"
        },
        "zip_code": {
          "description": "Post code of the site location.",
          "type": "string",
          "example": "31200"
        },
        "city": {
          "description": "City of the site location.",
          "type": "string",
          "example": "Toulouse"
        },
        "region": {
          "description": "Region/State of the site location.",
          "type": "string",
          "example": "Haute-Garonne"
        },
        "country": {
          "description": "Country code of the site location (uppercase two-letter ISO-3166-1 alpha-2 code).",
          "type": "string",
          "example": "FR"
        },
        "crosstreet": {
          "description": "Cross street details.",
          "type": "string"
        },
        "complement": {
          "description": "Address complement.",
          "type": "string"
        },
        "latitude": {
          "description": "Address latitude.",
          "type": "string"
        },
        "longitude": {
          "description": "Address longitude.",
          "type": "string"
        },
        "police_phone_number": {
          "description": "Police phone number of the site area.",
          "type": "string",
          "example": "17"
        },
        "kids_enabled": {
          "description": "Enable KIDS feature.",
          "type": "boolean"
        },
        "display_kid_presence": {
          "description": "Display presence for Kids.",
          "type": "boolean"
        },
        "display_guest_presence": {
          "description": "Display presence for guests.",
          "type": "boolean"
        },
        "shutter_automatic_enabled": {
          "description": "Enable automatic shutter (for cameras).",
          "type": "boolean"
        },
        "presence_enabled": {
          "description": "Enable user presence display.",
          "type": "boolean"
        },
        "outdoor_shutter_automatic_enabled": {
          "description": "Disabled surveillance on disarm (for cameras).",
          "type": "boolean"
        },
        "smoke_alarm_listening_enabled": {
          "description": "Enable smoke alarm detection.",
          "type": "boolean"
        },
        "mfa_enabled": {
          "description": "Enable Myfox Around.",
          "type": "boolean"
        },
        "mfa_available": {
          "description": "Myfox Around  Feature.",
          "type": "boolean"
        },
        "exitDelay": {
          "type": "integer",
          "example": "30"
        },
        "installer_id": {
          "description": "Installer Id.",
          "type": "string"
        }
      }
    },
    "SiteAlarm": {
      "required": [
        "status",
        "alarm_type",
        "start_at",
        "end_at"
      ],
      "properties": {
        "status": {
          "description": "Site alarm status.",
          "type": "string",
          "enum": [
            "none",
            "ongoing"
          ]
        },
        "alarm_type": {
          "description": "Type of last alarm.",
          "type": "string",
          "enum": [
            "panic",
            "trespass",
            "smoke"
          ]
        },
        "manual_alarm": {
          "description": "Is last alarm manual or automatic.",
          "type": "boolean"
        },
        "start_at": {
          "description": "Starting time of last alarm.",
          "type": "string",
          "format": "date-time"
        },
        "start_siren_at": {
          "description": "Starting siren time of last alarm.",
          "type": "string",
          "format": "date-time"
        },
        "end_siren_at": {
          "description": "End siren time of last alarm.",
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "description": "End time of last alarm.",
          "type": "string",
          "format": "date-time"
        },
        "stopped_by_user_id": {
          "description": "User identifier who stopped the last alarm.",
          "type": "string"
        }
      }
    },
    "AssistantPasscode": {
      "required": [
        "passcode"
      ],
      "properties": {
        "passcode": {
          "description": "Four digit passcode for alexa.",
          "type": "string"
        },
        "old_passcode": {
          "description": "Previous passcode for alexa.",
          "type": "string"
        }
      }
    },
    "SiteCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "Output[]\nList of sites.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteOutput"
          }
        },
        "default": {
          "description": "The default site identifier.",
          "type": "string"
        }
      }
    },
    "SiteDiagnosis": {
      "required": [],
      "properties": {
        "main_status": {
          "type": "string",
          "enum": [
            "ok",
            "device-offline",
            "device-warning"
          ]
        },
        "main_message": {
          "type": "string"
        },
        "main_message_vars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "device_diagnosis_available": {
          "type": "boolean"
        },
        "device_diagnosis_expired": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteDiagnosisItem"
          }
        }
      }
    },
    "SiteDiagnosisItem": {
      "required": [],
      "properties": {
        "device_id": {
          "type": "string"
        },
        "problem": {
          "type": "string"
        }
      }
    },
    "SiteEvent": {
      "required": [
        "occurred_at",
        "message_type",
        "message_key",
        "message_vars"
      ],
      "properties": {
        "id": {
          "description": "Event ID.",
          "type": "string"
        },
        "occurred_at": {
          "description": "Event time.",
          "type": "string",
          "format": "date-time"
        },
        "message_type": {
          "description": "Event type.",
          "type": "string",
          "enum": [
            "securityLevel",
            "securityAlarm",
            "install",
            "uninstall",
            "deviceConfiguration",
            "userManagement"
          ]
        },
        "message_key": {
          "description": "Translation key.",
          "type": "string",
          "example": "site.securityLevel.disarmed.user"
        },
        "message_vars": {
          "description": "Translation vars.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "description": "Event origin.",
          "$ref": "#/definitions/SiteEventOrigin"
        },
        "medium": {
          "description": "Event medium.",
          "type": "string"
        }
      }
    },
    "SiteEventCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of SiteEvent objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteEvent"
          }
        }
      }
    },
    "SiteEventOrigin": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Type of origin.",
          "type": "string",
          "enum": [
            "user",
            "device"
          ]
        },
        "user_id": {
          "description": "User identifier if type is 'user'.",
          "type": "string"
        },
        "device_id": {
          "description": "Device identifier if type is 'device'.",
          "type": "string"
        },
        "device_definition_id": {
          "description": "Device definition identifier if type is 'device'.",
          "type": "string",
          "enum": [
            "mss_camera",
            "mss_plug",
            "mss_remote",
            "mss_siren",
            "mss_tag"
          ]
        },
        "detection": {
          "description": "Origin of detection.",
          "type": "string",
          "enum": [
            "infrared",
            "opening",
            "shock",
            "panic",
            "image",
            "noise",
            "face",
            "jamming"
          ]
        }
      }
    },
    "ExternalStorageInput": {
      "required": [
        "provider",
        "access_token",
        "refresh_token"
      ],
      "properties": {
        "provider": {
          "description": "External video provider name.",
          "type": "string",
          "example": "dropbox|googledrive|onedrive"
        },
        "accessToken": {
          "description": "Access token.",
          "type": "string",
          "example": "ACCESS_TOKEN"
        },
        "refreshToken": {
          "description": "Refresh token.",
          "type": "string",
          "example": "REFRESH_TOKEN"
        }
      }
    },
    "ExternalStorageOutput": {
      "required": [
        "provider",
        "status",
        "error"
      ],
      "properties": {
        "provider": {
          "description": "External video provider name.",
          "type": "string",
          "example": "dropbox|googledrive|onedrive"
        },
        "status": {
          "description": "Status.",
          "type": "string",
          "example": "synced|paused|undefined"
        },
        "errorMessage": {
          "description": "Error message.",
          "type": "string",
          "example": "Error message"
        }
      }
    },
    "AbstractGeoFence": {
      "required": [
        "latitude",
        "longitude",
        "radius",
        "triggerExit",
        "triggerEnter"
      ],
      "properties": {
        "latitude": {
          "description": "Latitude.",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude.",
          "type": "number",
          "format": "float"
        },
        "radius": {
          "description": "Radius.",
          "type": "number",
          "format": "float",
          "default": 450
        },
        "trigger_exit": {
          "description": "Trigger exit.",
          "type": "boolean"
        },
        "trigger_exit_if_last": {
          "description": "Trigger exit if last.",
          "type": "boolean"
        },
        "trigger_enter": {
          "description": "Trigger enter.",
          "type": "boolean"
        },
        "location_phone_id": {
          "description": "Mobile ID used for smart activation and presence. (nullable).",
          "type": "string",
          "default": "null"
        }
      }
    },
    "GeoFenceInput": {
      "required": [
        "trigger_exit",
        "trigger_enter"
      ],
      "properties": {
        "latitude": {
          "description": "Latitude.",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude.",
          "type": "number",
          "format": "float"
        },
        "radius": {
          "description": "Radius.",
          "type": "number",
          "format": "float",
          "default": 450
        },
        "trigger_exit": {
          "description": "Trigger exit.",
          "type": "boolean"
        },
        "trigger_exit_if_last": {
          "description": "Trigger exit if last.",
          "type": "boolean"
        },
        "trigger_enter": {
          "description": "Trigger enter.",
          "type": "boolean"
        },
        "location_phone_id": {
          "description": "Mobile ID used for smart activation and presence. (nullable).",
          "type": "string",
          "default": "null"
        }
      }
    },
    "GeoFenceOutput": {
      "properties": {
        "use_fob_monitoring": {
          "description": "Use fob monitoring.",
          "type": "boolean"
        },
        "fob_deactivation_status": {
          "description": "Is smart activation possible with fob.",
          "type": "string",
          "default": "missing.fob",
          "enum": [
            "ok",
            "missing.fob",
            "missing.tag"
          ]
        },
        "latitude": {
          "description": "Latitude.",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude.",
          "type": "number",
          "format": "float"
        },
        "radius": {
          "description": "Radius.",
          "type": "number",
          "format": "float",
          "default": 450
        },
        "trigger_exit": {
          "description": "Trigger exit.",
          "type": "boolean"
        },
        "trigger_exit_if_last": {
          "description": "Trigger exit if last.",
          "type": "boolean"
        },
        "trigger_enter": {
          "description": "Trigger enter.",
          "type": "boolean"
        },
        "location_phone_id": {
          "description": "Mobile ID used for smart activation and presence. (nullable).",
          "type": "string",
          "default": "null"
        }
      }
    },
    "SiteInput": {
      "properties": {
        "label": {
          "description": "Site label.",
          "type": "string",
          "example": "Ernest Home"
        },
        "servicesVersion": {
          "description": "Site Services Version.",
          "type": "integer",
          "example": "1"
        },
        "subscription_active": {
          "description": "Is site subscription active.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone of the site location.",
          "type": "string",
          "example": "Europe/Paris"
        },
        "name": {
          "description": "Name of the site location.",
          "type": "string",
          "example": "John Doe"
        },
        "address1": {
          "description": "Address of the site location.",
          "type": "string",
          "example": "114 Rue des Troenes"
        },
        "address2": {
          "description": "Address complement of the site location.",
          "type": "string",
          "example": "Centrale"
        },
        "zip_code": {
          "description": "Post code of the site location.",
          "type": "string",
          "example": "31200"
        },
        "city": {
          "description": "City of the site location.",
          "type": "string",
          "example": "Toulouse"
        },
        "region": {
          "description": "Region/State of the site location.",
          "type": "string",
          "example": "Haute-Garonne"
        },
        "country": {
          "description": "Country code of the site location (uppercase two-letter ISO-3166-1 alpha-2 code).",
          "type": "string",
          "example": "FR"
        },
        "crosstreet": {
          "description": "Cross street details.",
          "type": "string"
        },
        "complement": {
          "description": "Address complement.",
          "type": "string"
        },
        "latitude": {
          "description": "Address latitude.",
          "type": "string"
        },
        "longitude": {
          "description": "Address longitude.",
          "type": "string"
        },
        "police_phone_number": {
          "description": "Police phone number of the site area.",
          "type": "string",
          "example": "17"
        },
        "kids_enabled": {
          "description": "Enable KIDS feature.",
          "type": "boolean"
        },
        "display_kid_presence": {
          "description": "Display presence for Kids.",
          "type": "boolean"
        },
        "display_guest_presence": {
          "description": "Display presence for guests.",
          "type": "boolean"
        },
        "shutter_automatic_enabled": {
          "description": "Enable automatic shutter (for cameras).",
          "type": "boolean"
        },
        "presence_enabled": {
          "description": "Enable user presence display.",
          "type": "boolean"
        },
        "outdoor_shutter_automatic_enabled": {
          "description": "Disabled surveillance on disarm (for cameras).",
          "type": "boolean"
        },
        "smoke_alarm_listening_enabled": {
          "description": "Enable smoke alarm detection.",
          "type": "boolean"
        },
        "mfa_enabled": {
          "description": "Enable Myfox Around.",
          "type": "boolean"
        },
        "mfa_available": {
          "description": "Myfox Around  Feature.",
          "type": "boolean"
        },
        "exitDelay": {
          "type": "integer",
          "example": "30"
        },
        "installer_id": {
          "description": "Installer Id.",
          "type": "string"
        }
      }
    },
    "InstallerSiteCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "Output[]\nList of sites.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteOutput"
          }
        }
      }
    },
    "SiteInstallerInput": {
      "properties": {
        "additional_info": {
          "description": "Additional Info.",
          "type": "string",
          "example": "Additional Informations"
        },
        "statement_url": {
          "description": "Statement URL.",
          "type": "string",
          "example": "http://...."
        },
        "user_rights_granted_until_at": {
          "description": "User Rights granted limit date.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SiteInstallerOutput": {
      "properties": {
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "security_level": {
          "description": "Site security level.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        },
        "invitation": {
          "description": "Site invitation details.",
          "$ref": "#/definitions/SiteInvitationOutput"
        },
        "alarm": {
          "description": "Alarm details.",
          "$ref": "#/definitions/SiteAlarm"
        },
        "diagnosis": {
          "description": "Diagnosis.",
          "$ref": "#/definitions/SiteDiagnosis"
        },
        "install_completed": {
          "description": "Install completed flag.",
          "type": "boolean"
        },
        "brand": {
          "description": "Brand."
        },
        "restoration_active": {
          "description": "Is a Plug configuration currently being backed up?",
          "type": "boolean"
        },
        "privacy_active": {
          "description": "Privacy current status.",
          "type": "boolean"
        },
        "read_only": {
          "description": "Read only status.",
          "type": "boolean"
        },
        "hcs_site_id": {
          "description": "HCS site identifier.",
          "type": "string"
        },
        "ilo_site_id": {
          "description": "ILO site identifier.",
          "type": "string"
        },
        "origin": {
          "description": "Site origin.",
          "type": "string"
        },
        "axa_it_phone_number": {
          "description": "Axa IT phone number.",
          "type": "string"
        },
        "axa_it_phone_number_displayed": {
          "description": "Axa IT phone number formatted.",
          "type": "string"
        },
        "features": {
          "description": "Features enabled.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domesticAlarmOutputCollection": {
          "description": "Current domestic alarms.",
          "$ref": "#/definitions/DomesticAlarmOutputCollection"
        },
        "bundle_type": {
          "description": "Bundle type for  ILO.",
          "type": "string",
          "default": "home",
          "enum": [
            "home",
            "flat"
          ]
        },
        "services": {
          "description": "Services.",
          "$ref": "#/definitions/SiteServicesOutput"
        },
        "label": {
          "description": "Site label.",
          "type": "string",
          "example": "Ernest Home"
        },
        "servicesVersion": {
          "description": "Site Services Version.",
          "type": "integer",
          "example": "1"
        },
        "subscription_active": {
          "description": "Is site subscription active.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone of the site location.",
          "type": "string",
          "example": "Europe/Paris"
        },
        "name": {
          "description": "Name of the site location.",
          "type": "string",
          "example": "John Doe"
        },
        "address1": {
          "description": "Address of the site location.",
          "type": "string",
          "example": "114 Rue des Troenes"
        },
        "address2": {
          "description": "Address complement of the site location.",
          "type": "string",
          "example": "Centrale"
        },
        "zip_code": {
          "description": "Post code of the site location.",
          "type": "string",
          "example": "31200"
        },
        "city": {
          "description": "City of the site location.",
          "type": "string",
          "example": "Toulouse"
        },
        "region": {
          "description": "Region/State of the site location.",
          "type": "string",
          "example": "Haute-Garonne"
        },
        "country": {
          "description": "Country code of the site location (uppercase two-letter ISO-3166-1 alpha-2 code).",
          "type": "string",
          "example": "FR"
        },
        "crosstreet": {
          "description": "Cross street details.",
          "type": "string"
        },
        "complement": {
          "description": "Address complement.",
          "type": "string"
        },
        "latitude": {
          "description": "Address latitude.",
          "type": "string"
        },
        "longitude": {
          "description": "Address longitude.",
          "type": "string"
        },
        "police_phone_number": {
          "description": "Police phone number of the site area.",
          "type": "string",
          "example": "17"
        },
        "kids_enabled": {
          "description": "Enable KIDS feature.",
          "type": "boolean"
        },
        "display_kid_presence": {
          "description": "Display presence for Kids.",
          "type": "boolean"
        },
        "display_guest_presence": {
          "description": "Display presence for guests.",
          "type": "boolean"
        },
        "shutter_automatic_enabled": {
          "description": "Enable automatic shutter (for cameras).",
          "type": "boolean"
        },
        "presence_enabled": {
          "description": "Enable user presence display.",
          "type": "boolean"
        },
        "outdoor_shutter_automatic_enabled": {
          "description": "Disabled surveillance on disarm (for cameras).",
          "type": "boolean"
        },
        "smoke_alarm_listening_enabled": {
          "description": "Enable smoke alarm detection.",
          "type": "boolean"
        },
        "mfa_enabled": {
          "description": "Enable Myfox Around.",
          "type": "boolean"
        },
        "mfa_available": {
          "description": "Myfox Around  Feature.",
          "type": "boolean"
        },
        "exitDelay": {
          "type": "integer",
          "example": "30"
        },
        "installer_id": {
          "description": "Installer Id.",
          "type": "string"
        }
      }
    },
    "SiteInvitationAnswer": {
      "required": [
        "answer"
      ],
      "properties": {
        "answer": {
          "description": "Answer for invitation.",
          "type": "string",
          "enum": [
            "accept",
            "decline"
          ]
        }
      }
    },
    "SiteInvitationOutput": {
      "required": [
        "invited_by",
        "invitation_status"
      ],
      "properties": {
        "invited_by": {
          "description": "Identifier of user who sent invitation.",
          "type": "string"
        },
        "invited_by_displayname": {
          "description": "Username of user who sent invitation.",
          "type": "string"
        },
        "invitation_status": {
          "description": "Invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "refused",
            "not_required"
          ]
        }
      }
    },
    "SiteInvitationRequest": {
      "required": [
        "display_name",
        "email",
        "profiles"
      ],
      "properties": {
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "display_name": {
          "description": "The user display name.",
          "type": "string",
          "example": "Le Wallon"
        },
        "email": {
          "description": "User email.",
          "type": "string",
          "example": "le.wallon@getmyfox.com"
        },
        "photo_id": {
          "description": "The photo identifier.",
          "type": "string"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        },
        "phone": {
          "description": "User's phone number.",
          "type": "string"
        }
      }
    },
    "AbstractLocation": {
      "properties": {
        "latitude": {
          "description": "Latitude.",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude.",
          "type": "number",
          "format": "float"
        },
        "trigger_exit": {
          "description": "Trigger exit.",
          "type": "boolean"
        },
        "trigger_exit_if_last": {
          "description": "Trigger exit if last.",
          "type": "boolean"
        },
        "trigger_enter": {
          "description": "Trigger enter.",
          "type": "boolean"
        },
        "location_phone_id": {
          "description": "Mobile ID used for smart activation and presence. (nullable).",
          "type": "string",
          "default": "null"
        }
      }
    },
    "LocationInput": {
      "properties": {
        "latitude": {
          "description": "Latitude.",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude.",
          "type": "number",
          "format": "float"
        },
        "trigger_exit": {
          "description": "Trigger exit.",
          "type": "boolean"
        },
        "trigger_exit_if_last": {
          "description": "Trigger exit if last.",
          "type": "boolean"
        },
        "trigger_enter": {
          "description": "Trigger enter.",
          "type": "boolean"
        },
        "location_phone_id": {
          "description": "Mobile ID used for smart activation and presence. (nullable).",
          "type": "string",
          "default": "null"
        }
      }
    },
    "LocationOutput": {
      "properties": {
        "fob_deactivation_status": {
          "description": "Is smart activation possible with fob.",
          "type": "string",
          "default": "missing.fob",
          "enum": [
            "ok",
            "missing.fob",
            "missing.tag"
          ]
        },
        "latitude": {
          "description": "Latitude.",
          "type": "number",
          "format": "float"
        },
        "longitude": {
          "description": "Longitude.",
          "type": "number",
          "format": "float"
        },
        "trigger_exit": {
          "description": "Trigger exit.",
          "type": "boolean"
        },
        "trigger_exit_if_last": {
          "description": "Trigger exit if last.",
          "type": "boolean"
        },
        "trigger_enter": {
          "description": "Trigger enter.",
          "type": "boolean"
        },
        "location_phone_id": {
          "description": "Mobile ID used for smart activation and presence. (nullable).",
          "type": "string",
          "default": "null"
        }
      }
    },
    "LoraWanCover": {
      "required": [
        "lora_wan_cover_test_result"
      ],
      "properties": {
        "lora_wan_cover_test_result": {
          "description": "Result of cover test.",
          "type": "boolean"
        }
      }
    },
    "SiteOutput": {
      "required": [
        "site_id",
        "security_level",
        "invitation",
        "diagnosis_status",
        "alarm",
        "restoration_active",
        "privacy_active",
        "read_only",
        "services"
      ],
      "properties": {
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "security_level": {
          "description": "Site security level.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        },
        "invitation": {
          "description": "Site invitation details.",
          "$ref": "#/definitions/SiteInvitationOutput"
        },
        "alarm": {
          "description": "Alarm details.",
          "$ref": "#/definitions/SiteAlarm"
        },
        "diagnosis": {
          "description": "Diagnosis.",
          "$ref": "#/definitions/SiteDiagnosis"
        },
        "install_completed": {
          "description": "Install completed flag.",
          "type": "boolean"
        },
        "brand": {
          "description": "Brand."
        },
        "restoration_active": {
          "description": "Is a Plug configuration currently being backed up?",
          "type": "boolean"
        },
        "privacy_active": {
          "description": "Privacy current status.",
          "type": "boolean"
        },
        "read_only": {
          "description": "Read only status.",
          "type": "boolean"
        },
        "hcs_site_id": {
          "description": "HCS site identifier.",
          "type": "string"
        },
        "ilo_site_id": {
          "description": "ILO site identifier.",
          "type": "string"
        },
        "origin": {
          "description": "Site origin.",
          "type": "string"
        },
        "axa_it_phone_number": {
          "description": "Axa IT phone number.",
          "type": "string"
        },
        "axa_it_phone_number_displayed": {
          "description": "Axa IT phone number formatted.",
          "type": "string"
        },
        "features": {
          "description": "Features enabled.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domesticAlarmOutputCollection": {
          "description": "Current domestic alarms.",
          "$ref": "#/definitions/DomesticAlarmOutputCollection"
        },
        "bundle_type": {
          "description": "Bundle type for  ILO.",
          "type": "string",
          "default": "home",
          "enum": [
            "home",
            "flat"
          ]
        },
        "services": {
          "description": "Services.",
          "$ref": "#/definitions/SiteServicesOutput"
        },
        "label": {
          "description": "Site label.",
          "type": "string",
          "example": "Ernest Home"
        },
        "servicesVersion": {
          "description": "Site Services Version.",
          "type": "integer",
          "example": "1"
        },
        "subscription_active": {
          "description": "Is site subscription active.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone of the site location.",
          "type": "string",
          "example": "Europe/Paris"
        },
        "name": {
          "description": "Name of the site location.",
          "type": "string",
          "example": "John Doe"
        },
        "address1": {
          "description": "Address of the site location.",
          "type": "string",
          "example": "114 Rue des Troenes"
        },
        "address2": {
          "description": "Address complement of the site location.",
          "type": "string",
          "example": "Centrale"
        },
        "zip_code": {
          "description": "Post code of the site location.",
          "type": "string",
          "example": "31200"
        },
        "city": {
          "description": "City of the site location.",
          "type": "string",
          "example": "Toulouse"
        },
        "region": {
          "description": "Region/State of the site location.",
          "type": "string",
          "example": "Haute-Garonne"
        },
        "country": {
          "description": "Country code of the site location (uppercase two-letter ISO-3166-1 alpha-2 code).",
          "type": "string",
          "example": "FR"
        },
        "crosstreet": {
          "description": "Cross street details.",
          "type": "string"
        },
        "complement": {
          "description": "Address complement.",
          "type": "string"
        },
        "latitude": {
          "description": "Address latitude.",
          "type": "string"
        },
        "longitude": {
          "description": "Address longitude.",
          "type": "string"
        },
        "police_phone_number": {
          "description": "Police phone number of the site area.",
          "type": "string",
          "example": "17"
        },
        "kids_enabled": {
          "description": "Enable KIDS feature.",
          "type": "boolean"
        },
        "display_kid_presence": {
          "description": "Display presence for Kids.",
          "type": "boolean"
        },
        "display_guest_presence": {
          "description": "Display presence for guests.",
          "type": "boolean"
        },
        "shutter_automatic_enabled": {
          "description": "Enable automatic shutter (for cameras).",
          "type": "boolean"
        },
        "presence_enabled": {
          "description": "Enable user presence display.",
          "type": "boolean"
        },
        "outdoor_shutter_automatic_enabled": {
          "description": "Disabled surveillance on disarm (for cameras).",
          "type": "boolean"
        },
        "smoke_alarm_listening_enabled": {
          "description": "Enable smoke alarm detection.",
          "type": "boolean"
        },
        "mfa_enabled": {
          "description": "Enable Myfox Around.",
          "type": "boolean"
        },
        "mfa_available": {
          "description": "Myfox Around  Feature.",
          "type": "boolean"
        },
        "exitDelay": {
          "type": "integer",
          "example": "30"
        },
        "installer_id": {
          "description": "Installer Id.",
          "type": "string"
        }
      }
    },
    "SiteOutputWithUserRelation": {
      "properties": {
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        },
        "token": {
          "description": "Camera token.",
          "type": "string"
        },
        "short_site_id": {
          "description": "Short site identifier.",
          "type": "string"
        },
        "geoFence": {
          "description": "User site Geo Fence.",
          "$ref": "#/definitions/GeoFenceOutput"
        },
        "alexa_selected_at": {
          "description": "Alexa selection datetime.",
          "type": "string",
          "format": "date-time"
        },
        "alexa_state": {
          "description": "Alexa configuration state.",
          "type": "string"
        },
        "alexa_available": {
          "description": "Alexa availability on the site.",
          "type": "boolean"
        },
        "display_my_presence": {
          "description": "Status of presence's user.",
          "type": "boolean"
        },
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "security_level": {
          "description": "Site security level.",
          "type": "string",
          "enum": [
            "disarmed",
            "partial",
            "armed"
          ]
        },
        "invitation": {
          "description": "Site invitation details.",
          "$ref": "#/definitions/SiteInvitationOutput"
        },
        "alarm": {
          "description": "Alarm details.",
          "$ref": "#/definitions/SiteAlarm"
        },
        "diagnosis": {
          "description": "Diagnosis.",
          "$ref": "#/definitions/SiteDiagnosis"
        },
        "install_completed": {
          "description": "Install completed flag.",
          "type": "boolean"
        },
        "brand": {
          "description": "Brand."
        },
        "restoration_active": {
          "description": "Is a Plug configuration currently being backed up?",
          "type": "boolean"
        },
        "privacy_active": {
          "description": "Privacy current status.",
          "type": "boolean"
        },
        "read_only": {
          "description": "Read only status.",
          "type": "boolean"
        },
        "hcs_site_id": {
          "description": "HCS site identifier.",
          "type": "string"
        },
        "ilo_site_id": {
          "description": "ILO site identifier.",
          "type": "string"
        },
        "origin": {
          "description": "Site origin.",
          "type": "string"
        },
        "axa_it_phone_number": {
          "description": "Axa IT phone number.",
          "type": "string"
        },
        "axa_it_phone_number_displayed": {
          "description": "Axa IT phone number formatted.",
          "type": "string"
        },
        "features": {
          "description": "Features enabled.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domesticAlarmOutputCollection": {
          "description": "Current domestic alarms.",
          "$ref": "#/definitions/DomesticAlarmOutputCollection"
        },
        "bundle_type": {
          "description": "Bundle type for  ILO.",
          "type": "string",
          "default": "home",
          "enum": [
            "home",
            "flat"
          ]
        },
        "services": {
          "description": "Services.",
          "$ref": "#/definitions/SiteServicesOutput"
        },
        "label": {
          "description": "Site label.",
          "type": "string",
          "example": "Ernest Home"
        },
        "servicesVersion": {
          "description": "Site Services Version.",
          "type": "integer",
          "example": "1"
        },
        "subscription_active": {
          "description": "Is site subscription active.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone of the site location.",
          "type": "string",
          "example": "Europe/Paris"
        },
        "name": {
          "description": "Name of the site location.",
          "type": "string",
          "example": "John Doe"
        },
        "address1": {
          "description": "Address of the site location.",
          "type": "string",
          "example": "114 Rue des Troenes"
        },
        "address2": {
          "description": "Address complement of the site location.",
          "type": "string",
          "example": "Centrale"
        },
        "zip_code": {
          "description": "Post code of the site location.",
          "type": "string",
          "example": "31200"
        },
        "city": {
          "description": "City of the site location.",
          "type": "string",
          "example": "Toulouse"
        },
        "region": {
          "description": "Region/State of the site location.",
          "type": "string",
          "example": "Haute-Garonne"
        },
        "country": {
          "description": "Country code of the site location (uppercase two-letter ISO-3166-1 alpha-2 code).",
          "type": "string",
          "example": "FR"
        },
        "crosstreet": {
          "description": "Cross street details.",
          "type": "string"
        },
        "complement": {
          "description": "Address complement.",
          "type": "string"
        },
        "latitude": {
          "description": "Address latitude.",
          "type": "string"
        },
        "longitude": {
          "description": "Address longitude.",
          "type": "string"
        },
        "police_phone_number": {
          "description": "Police phone number of the site area.",
          "type": "string",
          "example": "17"
        },
        "kids_enabled": {
          "description": "Enable KIDS feature.",
          "type": "boolean"
        },
        "display_kid_presence": {
          "description": "Display presence for Kids.",
          "type": "boolean"
        },
        "display_guest_presence": {
          "description": "Display presence for guests.",
          "type": "boolean"
        },
        "shutter_automatic_enabled": {
          "description": "Enable automatic shutter (for cameras).",
          "type": "boolean"
        },
        "presence_enabled": {
          "description": "Enable user presence display.",
          "type": "boolean"
        },
        "outdoor_shutter_automatic_enabled": {
          "description": "Disabled surveillance on disarm (for cameras).",
          "type": "boolean"
        },
        "smoke_alarm_listening_enabled": {
          "description": "Enable smoke alarm detection.",
          "type": "boolean"
        },
        "mfa_enabled": {
          "description": "Enable Myfox Around.",
          "type": "boolean"
        },
        "mfa_available": {
          "description": "Myfox Around  Feature.",
          "type": "boolean"
        },
        "exitDelay": {
          "type": "integer",
          "example": "30"
        },
        "installer_id": {
          "description": "Installer Id.",
          "type": "string"
        }
      }
    },
    "PlanCvrCamera": {
      "required": [
        "price",
        "camera_name",
        "device_id",
        "cvr_active"
      ],
      "properties": {
        "price": {
          "description": "Price.",
          "type": "integer"
        },
        "camera_name": {
          "description": "Camera Name.",
          "type": "string"
        },
        "device_id": {
          "description": "Camera Identifier.",
          "type": "string"
        },
        "cvr_active": {
          "description": "Camera has CVR.",
          "type": "boolean"
        }
      }
    },
    "PlanCvrOption": {
      "required": [
        "selected",
        "cvr_span",
        "first_camera_price",
        "other_camera_price"
      ],
      "properties": {
        "selected": {
          "description": "Selected.",
          "type": "boolean"
        },
        "cvr_span": {
          "description": "CVR Span 1|7.",
          "type": "integer"
        },
        "first_camera_price": {
          "description": "First camera price.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanPriceCamera"
          }
        },
        "other_camera_price": {
          "description": "Other camera price.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanPriceCamera"
          }
        }
      }
    },
    "PlanCvrStatus": {
      "required": [
        "displayed",
        "available",
        "warning",
        "span",
        "cameras"
      ],
      "properties": {
        "cvr_span": {
          "description": "CVR span.",
          "type": "integer"
        },
        "cameras": {
          "description": "List of cameras.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanCvrCamera"
          }
        },
        "provider": {
          "description": "Service provider.",
          "type": "string"
        },
        "displayed": {
          "description": "Service is displayed.",
          "type": "boolean"
        },
        "available": {
          "description": "Service is available.",
          "type": "boolean"
        },
        "warning": {
          "description": "Service has warning.",
          "type": "boolean"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "linkedCode": {
          "description": "Service link to next plan.",
          "type": "string"
        }
      }
    },
    "PlanEmergencyNetworkStatus": {
      "required": [
        "provider",
        "displayed",
        "available",
        "warning"
      ],
      "properties": {
        "provider": {
          "description": "Service provider.",
          "type": "string"
        },
        "displayed": {
          "description": "Service is displayed.",
          "type": "boolean"
        },
        "available": {
          "description": "Service is available.",
          "type": "boolean"
        },
        "warning": {
          "description": "Service has warning.",
          "type": "boolean"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "linkedCode": {
          "description": "Service link to next plan.",
          "type": "string"
        }
      }
    },
    "PlanEmergencyStatus": {
      "required": [
        "provider",
        "displayed",
        "available",
        "warning"
      ],
      "properties": {
        "provider": {
          "description": "Service provider.",
          "type": "string"
        },
        "displayed": {
          "description": "Service is displayed.",
          "type": "boolean"
        },
        "available": {
          "description": "Service is available.",
          "type": "boolean"
        },
        "warning": {
          "description": "Service has warning.",
          "type": "boolean"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "linkedCode": {
          "description": "Service link to next plan.",
          "type": "string"
        }
      }
    },
    "PlanGsmNetworkStatus": {
      "required": [
        "provider",
        "displayed",
        "available",
        "warning"
      ],
      "properties": {
        "provider": {
          "description": "Service provider.",
          "type": "string"
        },
        "displayed": {
          "description": "Service is displayed.",
          "type": "boolean"
        },
        "available": {
          "description": "Service is available.",
          "type": "boolean"
        },
        "warning": {
          "description": "Service has warning.",
          "type": "boolean"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "linkedCode": {
          "description": "Service link to next plan.",
          "type": "string"
        }
      }
    },
    "Plan": {
      "required": [
        "code",
        "name",
        "currency",
        "tax_included",
        "prices",
        "display_cvr",
        "features",
        "cvr_options",
        "button_type"
      ],
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string"
        },
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "subName": {
          "description": "Sub Name.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "currency": {
          "description": "ISO-4217 Currency.",
          "type": "string"
        },
        "tax_included": {
          "description": "Tax included.",
          "type": "boolean"
        },
        "prices": {
          "description": "List of prices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanPrice"
          }
        },
        "display_cvr": {
          "description": "Display CVR.",
          "type": "boolean"
        },
        "display_emergency_network": {
          "description": "Display EmergencyNetwork.",
          "type": "boolean"
        },
        "display_gsm_network": {
          "description": "Display GsmNetwork.",
          "type": "boolean"
        },
        "comment": {
          "description": "Comment.",
          "type": "string"
        },
        "features": {
          "description": "Features.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanFeature"
          }
        },
        "cvr_options": {
          "description": "CVR Options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanCvrOption"
          }
        },
        "button_type": {
          "description": "Button type.",
          "type": "string"
        },
        "button_url": {
          "description": "Button URL.",
          "type": "string"
        },
        "more_url": {
          "description": "More URL.",
          "type": "string"
        },
        "popup": {
          "description": "Popup.",
          "$ref": "#/definitions/PlanPopup"
        }
      }
    },
    "PlanAvailable": {
      "required": [
        "default_code",
        "items"
      ],
      "properties": {
        "default_code": {
          "description": "Code plan by default to show.",
          "type": "string"
        },
        "items": {
          "description": "List of plans.",
          "type": "array",
          "items": {}
        }
      }
    },
    "PlanCurrent": {
      "required": [
        "code",
        "name",
        "status",
        "currency",
        "tax_included",
        "period",
        "price",
        "cvr_status",
        "emergency_status",
        "pro_monitoring_status"
      ],
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string"
        },
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "subName": {
          "description": "Sub Name.",
          "type": "string"
        },
        "status": {
          "description": "Status.",
          "type": "string"
        },
        "end_term": {
          "description": "End term.",
          "type": "string"
        },
        "currency": {
          "description": "ISO-4217 Currency.",
          "type": "string"
        },
        "tax_included": {
          "description": "Tax included.",
          "type": "boolean"
        },
        "period": {
          "description": "Period.",
          "type": "string"
        },
        "price": {
          "description": "Price.",
          "type": "integer"
        },
        "cvr_status": {
          "description": "CVR Status.",
          "$ref": "#/definitions/PlanCvrStatus"
        },
        "emergency_status": {
          "description": "Emergency Status.",
          "$ref": "#/definitions/PlanEmergencyStatus"
        },
        "emergency_network_status": {
          "description": "EmergencyNetwork Status.",
          "$ref": "#/definitions/PlanEmergencyNetworkStatus"
        },
        "pro_monitoring_status": {
          "description": "Professional Monitoring Status.",
          "$ref": "#/definitions/PlanProMonitoringStatus"
        },
        "gsm_backup_status": {
          "description": "Gsm backup status.",
          "$ref": "#/definitions/PlanGsmNetworkStatus"
        },
        "card_last_4": {
          "type": "string"
        },
        "card_expires_at": {
          "type": "string"
        }
      }
    },
    "PlanFeature": {
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "description": "Text.",
          "type": "string"
        },
        "style": {
          "description": "Style.",
          "type": "string"
        },
        "group": {
          "description": "Group.",
          "type": "integer"
        }
      }
    },
    "PlanPopup": {
      "required": [
        "message",
        "btn_ok",
        "btn_cancel"
      ],
      "properties": {
        "message": {
          "description": "Message.",
          "type": "string"
        },
        "btn_ok": {
          "description": "Text Ok Button.",
          "type": "string"
        },
        "btn_cancel": {
          "description": "Text Cancel Button.",
          "type": "string"
        }
      }
    },
    "PlanPrice": {
      "required": [
        "period",
        "price"
      ],
      "properties": {
        "period": {
          "description": "Period.",
          "type": "string"
        },
        "price": {
          "description": "Price.",
          "type": "integer"
        }
      }
    },
    "PlanPriceCamera": {
      "required": [
        "period",
        "price",
        "text"
      ],
      "properties": {
        "period": {
          "description": "Period.",
          "type": "string"
        },
        "price": {
          "description": "Price.",
          "type": "integer"
        },
        "text": {
          "description": "Text.",
          "type": "string"
        }
      }
    },
    "PlanProMonitoringStatus": {
      "required": [
        "provider",
        "displayed",
        "available",
        "warning"
      ],
      "properties": {
        "provider": {
          "description": "Service provider.",
          "type": "string"
        },
        "displayed": {
          "description": "Service is displayed.",
          "type": "boolean"
        },
        "available": {
          "description": "Service is available.",
          "type": "boolean"
        },
        "warning": {
          "description": "Service has warning.",
          "type": "boolean"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "linkedCode": {
          "description": "Service link to next plan.",
          "type": "string"
        }
      }
    },
    "ServiceStatus": {
      "required": [
        "provider",
        "displayed",
        "available",
        "warning"
      ],
      "properties": {
        "provider": {
          "description": "Service provider.",
          "type": "string"
        },
        "displayed": {
          "description": "Service is displayed.",
          "type": "boolean"
        },
        "available": {
          "description": "Service is available.",
          "type": "boolean"
        },
        "warning": {
          "description": "Service has warning.",
          "type": "boolean"
        },
        "status": {
          "description": "Service status.",
          "type": "string"
        },
        "linkedCode": {
          "description": "Service link to next plan.",
          "type": "string"
        }
      }
    },
    "SitePrivacy": {
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "New state.",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        }
      }
    },
    "ServiceProduct": {
      "required": [
        "product_id"
      ],
      "properties": {
        "product_id": {
          "description": "Product identifier.",
          "type": "string",
          "enum": [
            "cvr1",
            "cvr7"
          ]
        }
      }
    },
    "ServiceCheckoutInput": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Plan identifier to subscribe.",
          "type": "string"
        },
        "options": {
          "description": "Plan options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCheckoutInputOption"
          }
        }
      }
    },
    "ServiceCheckoutInputOption": {
      "required": [
        "name",
        "devices"
      ],
      "properties": {
        "name": {
          "description": "Option name.",
          "type": "string"
        },
        "devices": {
          "description": "Devices list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCheckoutInputOptionDevice"
          }
        }
      }
    },
    "ServiceCheckoutInputOptionDevice": {
      "required": [
        "device_id"
      ],
      "properties": {
        "device_id": {
          "description": "Device identifier.",
          "type": "string"
        }
      }
    },
    "ServiceCheckoutOutput": {
      "required": [
        "url",
        "status"
      ],
      "properties": {
        "location": {
          "description": "Checkout URL.",
          "type": "string",
          "example": "https://some.where/checkout"
        },
        "status": {
          "description": "Checkout status.",
          "type": "string",
          "enum": [
            "immediate_new",
            "immediate_update",
            "postponed_delete",
            "postponed_update"
          ]
        }
      }
    },
    "ServiceCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of services.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        }
      }
    },
    "ServiceDevice": {
      "required": [
        "device_id",
        "label"
      ],
      "properties": {
        "device_id": {
          "description": "Device identifier.",
          "type": "string"
        },
        "label": {
          "description": "Device label.",
          "type": "string",
          "example": "Tribune camera"
        }
      }
    },
    "ServiceInvoice": {
      "required": [
        "invoice_id",
        "paid_on",
        "sub_total",
        "tax",
        "tax_inclusive",
        "amount",
        "currency",
        "invoice_url"
      ],
      "properties": {
        "invoice_id": {
          "description": "Invoice identifier.",
          "type": "string"
        },
        "paid_on": {
          "description": "Paid date.",
          "type": "string",
          "format": "date-time"
        },
        "sub_total": {
          "description": "Invoice subtotal.",
          "type": "integer",
          "example": 833
        },
        "tax": {
          "description": "Invoice tax.",
          "type": "integer",
          "example": 133
        },
        "tax_inclusive": {
          "description": "Tax included?",
          "type": "boolean"
        },
        "amount": {
          "description": "Invoice total amount.",
          "type": "integer",
          "example": 999
        },
        "currency": {
          "description": "Invoice currency.",
          "type": "string",
          "example": "EUR"
        },
        "invoice_url": {
          "description": "Invoice Link to download PDF.",
          "type": "string"
        }
      }
    },
    "ServiceInvoiceCollection": {
      "required": [
        "invoices"
      ],
      "properties": {
        "items": {
          "description": "List of invoices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInvoice"
          }
        }
      }
    },
    "ServiceSitePartner": {
      "required": [
        "status"
      ],
      "properties": {
        "name": {
          "description": "Site partner name.",
          "type": "string"
        },
        "status": {
          "description": "Site partner status.",
          "type": "string",
          "enum": [
            "enabled",
            "disabled",
            "deleted",
            "incomplete",
            "error",
            "waiting"
          ]
        },
        "data": {
          "description": "Specific data for this partner.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SitePaymentMethodUpdateOutput": {
      "required": [
        "url"
      ],
      "properties": {
        "location": {
          "description": "Checkout URL.",
          "type": "string",
          "example": "https://some.where/update"
        }
      }
    },
    "ServicePeriod": {
      "required": [
        "quantity",
        "unit"
      ],
      "properties": {
        "quantity": {
          "description": "Quantity.",
          "type": "integer",
          "example": 1
        },
        "unit": {
          "description": "Period unit.",
          "type": "string",
          "enum": [
            "year",
            "month",
            "day"
          ]
        }
      }
    },
    "ServiceProductOutput": {
      "required": [
        "devices",
        "currency",
        "prices"
      ],
      "properties": {
        "devices": {
          "description": "List of devices.",
          "$ref": "#/definitions/DeviceOutputMinimal"
        },
        "currency": {
          "description": "Currency code.",
          "type": "string",
          "example": "EUR"
        },
        "prices": {
          "description": "List of prices.",
          "type": "array",
          "items": {
            "type": "integer"
          },
          "example": [
            "999",
            "449",
            "449",
            "449"
          ]
        },
        "product_id": {
          "description": "Product identifier.",
          "type": "string",
          "enum": [
            "cvr1",
            "cvr7"
          ]
        }
      }
    },
    "Service": {
      "required": [
        "type",
        "started_at"
      ],
      "properties": {
        "type": {
          "description": "Type of service.",
          "type": "string",
          "enum": [
            "trial",
            "cvr-1",
            "cvr-7"
          ]
        },
        "devices": {
          "description": "List of Devices concerned by this service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDevice"
          }
        },
        "started_at": {
          "description": "Start date of service.",
          "type": "string",
          "format": "date-time"
        },
        "end_at": {
          "description": "End date of service.",
          "type": "string",
          "format": "date-time"
        },
        "period": {
          "description": "Service Period.",
          "$ref": "#/definitions/ServicePeriod"
        },
        "next_payment_at": {
          "description": "Date for next payment.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceAvailable": {
      "required": [
        "subscriptions"
      ],
      "properties": {
        "subscriptions": {
          "description": "List of current subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceSubscription"
          }
        }
      }
    },
    "ServiceSiteServices": {
      "properties": {
        "axa": {
          "description": "Axa service.",
          "$ref": "#/definitions/ServiceSitePartner"
        },
        "sotel": {
          "description": "Sotel service.",
          "$ref": "#/definitions/ServiceSitePartner"
        }
      }
    },
    "SiteServicesOutput": {
      "properties": {
        "backup_sms": {
          "description": "Backup sms status.",
          "type": "boolean",
          "default": false
        },
        "mfa_service_enabled": {
          "description": "SomfyAround service status.",
          "type": "boolean",
          "default": false
        },
        "lora_enabled": {
          "description": "LoraWan service status.",
          "type": "boolean",
          "default": false
        },
        "monitoring_enabled": {
          "description": "Monitoring service status.",
          "type": "boolean",
          "default": false
        },
        "on_site_intervention_enabled": {
          "description": "Intervention service status.",
          "type": "boolean",
          "default": false
        },
        "link_over_gsm_enabled": {
          "description": "Link connection over gsm service status.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ServiceSubscription": {
      "required": [
        "product"
      ],
      "properties": {
        "product": {
          "description": "Product.",
          "$ref": "#/definitions/ServiceProductOutput"
        },
        "subscription_id": {
          "description": "Subscription identifier.",
          "type": "string"
        },
        "started_at": {
          "description": "Start time of subscription.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceUnsubscribeInput": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "Option to send mail.",
          "type": "boolean"
        }
      }
    },
    "SiteUserLinkAbstract": {
      "properties": {
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        },
        "invitation_status": {
          "description": "Invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined",
            "unrequired",
            "disabled"
          ]
        },
        "site_display_name": {
          "description": "Site name for this user.",
          "type": "string",
          "example": "Ernest Home"
        },
        "display_my_presence": {
          "description": "Status of presence's user.",
          "type": "boolean"
        },
        "access_code": {
          "description": "Access Code.",
          "type": "string"
        },
        "user_id": {
          "description": "User id.",
          "type": "string"
        },
        "user_rights_granted_until_at": {
          "description": "User last access date to site's dashboard.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserSiteAction": {
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Action type.",
          "type": "string",
          "enum": [
            "checkin",
            "checkout",
            "fromtoken",
            "alexaSelect"
          ]
        },
        "params": {
          "description": "Action parameters.",
          "$ref": "#/definitions/UserSiteActionParameters"
        }
      }
    },
    "UserSiteActionParameters": {
      "properties": {
        "precision": {
          "description": "Precision.",
          "type": "string"
        },
        "event_latitude": {
          "description": "Latitude of the checkInOut event.",
          "type": "string"
        },
        "event_longitude": {
          "description": "Longitude of the checkInOut event.",
          "type": "string"
        },
        "event_precision": {
          "description": "Precision of the checkInOut event.",
          "type": "string"
        },
        "geofence_latitude": {
          "description": "Latitude of the geofence.",
          "type": "string"
        },
        "geofence_longitude": {
          "description": "Longitude of the geofence.",
          "type": "string"
        },
        "geofence_radius": {
          "description": "Radius of the geofence.",
          "type": "string"
        },
        "distance": {
          "description": "Distance.",
          "type": "string"
        },
        "phone_id": {
          "description": "Phone ID.",
          "type": "string"
        }
      }
    },
    "UserSiteProfile": {
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Type of profile.",
          "type": "string",
          "enum": [
            "admin",
            "owner",
            "guest",
            "kid",
            "family",
            "neighbor",
            "custom"
          ]
        },
        "enabled": {
          "description": "Profile enabled?",
          "type": "boolean"
        }
      }
    },
    "SiteUserLinkInput": {
      "properties": {
        "geofence": {
          "description": "User site Geo Fence.",
          "$ref": "#/definitions/GeoFenceInput"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        },
        "invitation_status": {
          "description": "Invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined",
            "unrequired",
            "disabled"
          ]
        },
        "site_display_name": {
          "description": "Site name for this user.",
          "type": "string",
          "example": "Ernest Home"
        },
        "display_my_presence": {
          "description": "Status of presence's user.",
          "type": "boolean"
        },
        "access_code": {
          "description": "Access Code.",
          "type": "string"
        },
        "user_id": {
          "description": "User id.",
          "type": "string"
        },
        "user_rights_granted_until_at": {
          "description": "User last access date to site's dashboard.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SiteUserLinkOutput": {
      "properties": {
        "geofence": {
          "description": "User site Geo Fence.",
          "$ref": "#/definitions/GeoFenceOutput"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        },
        "invitation_status": {
          "description": "Invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined",
            "unrequired",
            "disabled"
          ]
        },
        "site_display_name": {
          "description": "Site name for this user.",
          "type": "string",
          "example": "Ernest Home"
        },
        "display_my_presence": {
          "description": "Status of presence's user.",
          "type": "boolean"
        },
        "access_code": {
          "description": "Access Code.",
          "type": "string"
        },
        "user_id": {
          "description": "User id.",
          "type": "string"
        },
        "user_rights_granted_until_at": {
          "description": "User last access date to site's dashboard.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserAbstract": {
      "required": [
        "username"
      ],
      "properties": {
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "UserCollection": {
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "description": "List of users.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserOutputForSite"
          }
        }
      }
    },
    "Feedback": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "app": {
          "type": "string"
        },
        "phoneModel": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "UserInput": {
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "description": "User password (minimum 8 characters).",
          "type": "string",
          "format": "password",
          "example": "171b7tB0Yo1u"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "UserInputForUpdate": {
      "properties": {
        "photo_id": {
          "description": "The photo identifier.",
          "type": "string"
        },
        "display_name": {
          "description": "The user display name.",
          "example": "Ernest W."
        },
        "control_pwd": {
          "description": "User password given for control.",
          "example": "12345678"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "UserInputWithSecureToken": {
      "properties": {
        "activated": {
          "description": "User activation status.",
          "type": "boolean"
        },
        "password": {
          "description": "User password (minimum 8 characters).",
          "type": "string",
          "format": "password",
          "example": "171b7tB0Yo1u"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "UserOutput": {
      "required": [
        "user_id",
        "activated",
        "type_user"
      ],
      "properties": {
        "user_id": {
          "description": "User identifier.",
          "type": "string"
        },
        "created_at": {
          "description": "User creation date.",
          "type": "string",
          "format": "date-time"
        },
        "activated": {
          "description": "Is user account activated?",
          "type": "boolean"
        },
        "type_user": {
          "description": "Type of user.",
          "type": "string",
          "enum": [
            "account",
            "guest"
          ]
        },
        "invited_by": {
          "description": "Identifier of user who invited this user.",
          "type": "string"
        },
        "invited_by_displayname": {
          "description": "Username of user who invited this user.",
          "type": "string"
        },
        "invitation_status": {
          "description": "User invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined",
            "not required"
          ]
        },
        "photo_id": {
          "description": "Identifier of user photo.",
          "type": "string"
        },
        "display_name": {
          "description": "Name to display for this user.",
          "type": "string",
          "example": "Ernest W."
        },
        "origin": {
          "description": "User origin.",
          "type": "string"
        },
        "pro_details": {
          "description": "User pro details.",
          "type": "string"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "UserOutputForSite": {
      "required": [
        "present",
        "profiles"
      ],
      "properties": {
        "present": {
          "description": "Is user present in site?",
          "type": "boolean"
        },
        "geoFence": {
          "description": "User site Geo Fence.",
          "$ref": "#/definitions/GeoFenceOutput"
        },
        "alexa_selected_at": {
          "description": "User site alexa selection datetime.",
          "type": "string",
          "format": "date-time"
        },
        "display_my_presence": {
          "description": "Status of presence's user.",
          "type": "boolean"
        },
        "access_code": {
          "description": "Access Code.",
          "type": "string"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        },
        "has_individual_code": {
          "description": "user has individual code.",
          "type": "boolean"
        },
        "user_id": {
          "description": "User identifier.",
          "type": "string"
        },
        "created_at": {
          "description": "User creation date.",
          "type": "string",
          "format": "date-time"
        },
        "activated": {
          "description": "Is user account activated?",
          "type": "boolean"
        },
        "type_user": {
          "description": "Type of user.",
          "type": "string",
          "enum": [
            "account",
            "guest"
          ]
        },
        "invited_by": {
          "description": "Identifier of user who invited this user.",
          "type": "string"
        },
        "invited_by_displayname": {
          "description": "Username of user who invited this user.",
          "type": "string"
        },
        "invitation_status": {
          "description": "User invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined",
            "not required"
          ]
        },
        "photo_id": {
          "description": "Identifier of user photo.",
          "type": "string"
        },
        "display_name": {
          "description": "Name to display for this user.",
          "type": "string",
          "example": "Ernest W."
        },
        "origin": {
          "description": "User origin.",
          "type": "string"
        },
        "pro_details": {
          "description": "User pro details.",
          "type": "string"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "UserOutputWithSites": {
      "properties": {
        "sites": {
          "description": "User associated sites.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteOutputWithUserRelation"
          }
        },
        "alexaSelectedSiteId": {
          "type": "string"
        },
        "user_id": {
          "description": "User identifier.",
          "type": "string"
        },
        "created_at": {
          "description": "User creation date.",
          "type": "string",
          "format": "date-time"
        },
        "activated": {
          "description": "Is user account activated?",
          "type": "boolean"
        },
        "type_user": {
          "description": "Type of user.",
          "type": "string",
          "enum": [
            "account",
            "guest"
          ]
        },
        "invited_by": {
          "description": "Identifier of user who invited this user.",
          "type": "string"
        },
        "invited_by_displayname": {
          "description": "Username of user who invited this user.",
          "type": "string"
        },
        "invitation_status": {
          "description": "User invitation status.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined",
            "not required"
          ]
        },
        "photo_id": {
          "description": "Identifier of user photo.",
          "type": "string"
        },
        "display_name": {
          "description": "Name to display for this user.",
          "type": "string",
          "example": "Ernest W."
        },
        "origin": {
          "description": "User origin.",
          "type": "string"
        },
        "pro_details": {
          "description": "User pro details.",
          "type": "string"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Ernest"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Wallon"
        },
        "username": {
          "description": "User email.",
          "type": "string",
          "example": "ernest.wallon@getmyfox.com"
        },
        "gender": {
          "description": "User gender.",
          "type": "string",
          "enum": [
            "F",
            "M"
          ]
        },
        "locale": {
          "description": "User locale.",
          "type": "string",
          "example": "en_US"
        },
        "phone": {
          "description": "User phone number.",
          "type": "string",
          "example": "+33692693115"
        }
      }
    },
    "ValidateEmail": {
      "required": [
        "items"
      ]
    },
    "UserGuestAbstract": {
      "required": [
        "site_id",
        "display_name"
      ],
      "properties": {
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "display_name": {
          "description": "User display name on the site.",
          "type": "string",
          "example": "Rusty R."
        },
        "photo_id": {
          "description": "Identifier of user photo.",
          "type": "string"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Rusty"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Richards"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        }
      }
    },
    "UserGuestInput": {
      "properties": {
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "display_name": {
          "description": "User display name on the site.",
          "type": "string",
          "example": "Rusty R."
        },
        "photo_id": {
          "description": "Identifier of user photo.",
          "type": "string"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Rusty"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Richards"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        }
      }
    },
    "UserGuestOutput": {
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "description": "User identifier.",
          "type": "string"
        },
        "site_id": {
          "description": "Site identifier.",
          "type": "string"
        },
        "display_name": {
          "description": "User display name on the site.",
          "type": "string",
          "example": "Rusty R."
        },
        "photo_id": {
          "description": "Identifier of user photo.",
          "type": "string"
        },
        "firstname": {
          "description": "User firstname.",
          "type": "string",
          "example": "Rusty"
        },
        "lastname": {
          "description": "User lastname.",
          "type": "string",
          "example": "Richards"
        },
        "profiles": {
          "description": "Profiles of user for this site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSiteProfile"
          }
        }
      }
    },
    "RoomInput": {
      "required": [
        "label"
      ],
      "properties": {
        "name": {
          "description": "Room label.",
          "type": "string",
          "example": "SALON"
        }
      }
    },
    "RoomList": {
      "required": [
        "default",
        "rooms"
      ],
      "properties": {
        "defaultRoomId": {
          "description": "Room label.",
          "type": "string",
          "example": "roomid"
        },
        "rooms": {
          "description": "Room list.",
          "type": "array",
          "items": {}
        }
      }
    },
    "RoomOutput": {
      "required": [
        "label"
      ],
      "properties": {
        "id": {
          "description": "Room id.",
          "type": "string",
          "example": "roomid"
        },
        "name": {
          "description": "Room label.",
          "type": "string",
          "example": "SALON"
        }
      }
    },
    "HkpMode": {
      "properties": {
        "deterrence": {
          "$ref": "#/definitions/HkpModeDeterrence"
        }
      }
    },
    "HkpModeDeterrence": {}
  },
  "parameters": {
    "user_id": {
      "name": "user_id",
      "in": "path",
      "description": "User identifier",
      "required": true,
      "type": "string"
    },
    "phone_id": {
      "name": "phone_id",
      "in": "path",
      "description": "Identifier of the phone",
      "required": true,
      "type": "string"
    },
    "mobile": {
      "name": "mobile",
      "in": "body",
      "description": "Mobile details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Mobile"
      }
    }
  },
  "responses": {
    "200": {
      "description": "Successful operation",
      "schema": {
        "$ref": "#/definitions/Mobile"
      }
    }
  },
  "securityDefinitions": {
    "myfox_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://sso.myfox.io/oauth/oauth/v2/auth",
      "scopes": {
        "api.full": "Full access to API"
      }
    }
  },
  "tags": [
    {
      "name": "device",
      "description": "Configure your devices"
    },
    {
      "name": "invitation",
      "description": "Invite users to your site"
    },
    {
      "name": "invoice",
      "description": "Manage service invoices"
    },
    {
      "name": "misc",
      "description": "Other API points"
    },
    {
      "name": "mobile",
      "description": "Manage user mobile phones"
    },
    {
      "name": "photo",
      "description": "Upload and download photos"
    },
    {
      "name": "plan",
      "description": "Manage and subscribe to site plans"
    },
    {
      "name": "service",
      "description": "Manage and subscribe to site services"
    },
    {
      "name": "scenario",
      "description": "Manage your scenarios"
    },
    {
      "name": "site",
      "description": "Manage your site"
    },
    {
      "name": "user",
      "description": "Manage users"
    },
    {
      "name": "userSite",
      "description": "Manage link between a site and an user"
    }
  ]
}
